{"version":3,"file":"fcl.umd.js","sources":["../src/default-config.js","../src/exec/utils/is.js","../src/exec/utils/normalize-args.js","../src/exec/query.js","../src/current-user/normalize/__vsn.js","../src/current-user/normalize/frame.js","../src/current-user/normalize/back-channel-rpc.js","../src/current-user/normalize/local-view.js","../src/current-user/normalize/service.js","../src/current-user/normalize/pre-authz.js","../src/current-user/normalize/authz.js","../src/current-user/normalize/authn.js","../src/current-user/normalize/open-id.js","../src/current-user/normalize/user-signature.js","../src/current-user/build-user.js","../src/current-user/service-of-type.js","../src/current-user/exec-service/strategies/utils/service-endpoint.js","../src/current-user/exec-service/strategies/utils/fetch-service.js","../src/current-user/normalize/polling-response.js","../src/current-user/exec-service/strategies/utils/poll.js","../src/current-user/exec-service/strategies/utils/render-frame.js","../src/current-user/exec-service/strategies/utils/render-pop.js","../src/current-user/exec-service/strategies/utils/render-tab.js","../src/current-user/exec-service/exec-local.js","../src/current-user/exec-service/strategies/http-post.js","../src/current-user/exec-service/strategies/utils/frame.js","../src/current-user/exec-service/strategies/utils/pop.js","../src/current-user/exec-service/strategies/utils/tab.js","../src/current-user/exec-service/index.js","../src/current-user/exec-service/strategies/iframe-rpc.js","../src/current-user/exec-service/strategies/pop-rpc.js","../src/current-user/exec-service/strategies/tab-rpc.js","../src/current-user/normalize/composite-signature.js","../src/current-user/index.js","../src/current-user/fetch-services.js","../src/current-user/merge-services.js","../src/transaction/index.js","../src/events/index.js","../src/wallet-utils/send-msg-to-fcl.js","../src/wallet-utils/on-message-from-fcl.js","../src/fcl.js","../src/VERSION.js","../src/exec/mutate.js","../src/serialize/index.js"],"sourcesContent":["import {config} from \"@onflow/sdk\"\n\nconfig()\n  .put(\"accessNode.api\", \"http://localhost:8080\")\n  .put(\"discovery.wallet\", \"http://localhost:8701/fcl/authn\")\n  .put(\"discovery.wallet.method\", \"IFRAME/RPC\")\n\nexport async function configLens(regex) {\n  return Object.fromEntries(\n    Object.entries(await config().where(regex)).map(([key, value]) => [\n      key.replace(regex, \"\"),\n      value,\n    ])\n  )\n}\n","const is = type => d => typeof d === type\n\nexport const isRequired = d => d != null\nexport const isObject = is(\"object\")\nexport const isString = is(\"string\")\nexport const isFunc = is(\"function\")\nexport const isNumber = is(\"number\")\n","import {isFunc} from \"./is\"\nimport * as sdk from \"@onflow/sdk\"\nimport * as t from \"@onflow/types\"\n\nexport function normalizeArgs(ax) {\n  if (isFunc(ax)) return ax(sdk.arg, t)\n  return []\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport * as sdk from \"@onflow/sdk\"\nimport * as t from \"@onflow/types\"\nimport {isRequired, isObject, isString, isFunc} from \"./utils/is\"\nimport {normalizeArgs} from \"./utils/normalize-args\"\n\n/** Query the Flow Blockchain\n *\n *  @arg {Object} opts         - Query Options and configuration\n *  @arg {string} opts.cadence - Cadence Script used to query Flow\n *  @arg {ArgsFn} opts.args    - Arguments passed to cadence script\n *  @arg {number} opts.limit   - Compute Limit for Query\n *  @returns {Promise<Response>}\n *\n *  Where:\n *    @callback ArgsFn\n *    @arg {ArgFn}  arg - Argument function to define a single argument\n *    @arg {Object} t   - Cadence Types object used to define the type\n *    @returns {args[]}\n *\n *    @callback ArgFn\n *    @arg {Any}  value - the value of the argument\n *    @arg {Type} type  - the cadence type of the value\n *    @returns {arg}\n *\n *  Example:\n *    const cadence = `\n *      cadence: `\n *        pub fun main(a: Int, b: Int, c: Address): Int {\n *          log(c)\n *          return a + b\n *        }\n *    `.trim()\n *\n *    const args = (arg, t) => [\n *      arg(5, t.Int),\n *      arg(7, t.Int),\n *      arg(\"0xb2db43ad6bc345fec9\", t.Address),\n *    ]\n *\n *    await query({ cadence, args })\n */\nexport async function query(opts = {}) {\n  await preQuery(opts)\n\n  // prettier-ignore\n  return sdk.send([\n    sdk.script(opts.cadence),\n    sdk.args(normalizeArgs(opts.args || [])),\n    opts.limit && typeof opts.limit === \"number\" && sdk.limit(opts.limit)\n  ]).then(sdk.decode)\n}\n\nasync function preQuery(opts) {\n  invariant(\n    isRequired(opts.cadence),\n    \"query({ cadence }) -- cadence is required\"\n  )\n\n  invariant(\n    isString(opts.cadence),\n    \"query({ cadence }) -- cadence must be a string\"\n  )\n}\n","export const SERVICE_PRAGMA = {\n  f_type: \"Service\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const IDENTITY_PRAGMA = {\n  f_type: \"Identity\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const PROVIDER_PRAGMA = {\n  f_type: \"Provider\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const USER_PRAGMA = {\n  f_type: \"USER\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const POLLING_RESPONSE_PRAGMA = {\n  f_type: \"PollingResponse\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const COMPOSITE_SIGNATURE_PRAGMA = {\n  f_type: \"CompositeSignature\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const OPEN_ID_PRAGMA = {\n  f_type: \"OpenId\",\n  f_vsn: \"1.0.0\",\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"type\": \"frame\",\n//    \"endpoint\": \"https://rawr\",\n//    \"data\": {},   // Sent to frame when ready\n//    \"params\": {}, // include in query params on frame\n// }\nexport function normalizeFrame(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        old: service,\n        ...SERVICE_PRAGMA,\n        type: \"frame\",\n        endpoint: service.endpoint,\n        params: service.params || {},\n        data: service.data || {},\n      }\n  }\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"type\": \"back-channel-rpc\",\n//    \"endpoint\": \"https://rawr\",\n//    \"method\": \"HTTP/GET\", // HTTP/GET | HTTP/POST\n//    \"data\": {},           // included in body of rpc\n//    \"params\": {},         // included as query params on endpoint url\n// }\nexport function normalizeBackChannelRpc(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: \"back-channel-rpc\",\n        endpoint: service.endpoint,\n        method: service.method,\n        params: service.params || {},\n        data: service.data || {},\n      }\n  }\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    type: \"local-view\",\n//    method: \"VIEW/IFRAME\",\n//    endpoint: \"https://woot.org/authz/local\",\n//    data: {},\n//    params: {},\n// }\nexport function normalizeLocalView(resp) {\n  if (resp == null) return null\n  if (resp.method == null) {\n    resp = {...resp, type: \"local-view\", method: \"VIEW/IFRAME\"}\n  }\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: resp.type || \"local-view\",\n        method: resp.method,\n        endpoint: resp.endpoint,\n        data: resp.data || {},\n        params: resp.params || {},\n      }\n  }\n}\n","import {normalizeAuthn} from \"./authn\"\nimport {normalizeAuthz} from \"./authz\"\nimport {normalizePreAuthz} from \"./pre-authz\"\nimport {normalizeFrame} from \"./frame\"\nimport {normalizeBackChannelRpc} from \"./back-channel-rpc\"\nimport {normalizeOpenId} from \"./open-id\"\nimport {normalizeUserSignature} from \"./user-signature\"\nimport {normalizeLocalView} from \"./local-view\"\n\nexport function normalizeServices(services, data) {\n  return services.map(service => normalizeService(service, data))\n}\n\nconst serviceNormalizers = {\n  \"back-channel-rpc\": normalizeBackChannelRpc,\n  \"pre-authz\": normalizePreAuthz,\n  authz: normalizeAuthz,\n  authn: normalizeAuthn,\n  frame: normalizeFrame,\n  \"open-id\": normalizeOpenId,\n  \"user-signature\": normalizeUserSignature,\n  \"local-view\": normalizeLocalView,\n}\n\nexport function normalizeService(service, data) {\n  try {\n    var normalized = serviceNormalizers[service.type](service, data)\n    return normalized\n  } catch (error) {\n    console.error(\n      `Unrecognized FCL Service Type [${service.type}]`,\n      service,\n      error\n    )\n    return service\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA, IDENTITY_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"pre-authz\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"identity\": {\n//      \"address\": \"0x______\",\n//      \"keyId\": 0,\n//   },\n//   \"data\": {}, // included in body of pre-authz request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizePreAuthz(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.endpoint,\n        method: service.method,\n        identity: {\n          ...IDENTITY_PRAGMA,\n          address: withPrefix(service.addr),\n          keyId: service.keyId,\n        },\n        params: service.params,\n        data: service.data,\n      }\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA, IDENTITY_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"authz\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"identity\": {\n//      \"address\": \"0x______\",\n//      \"keyId\": 0,\n//   },\n//   \"data\": {}, // included in body of authz request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizeAuthz(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.endpoint,\n        method: service.method,\n        identity: {\n          ...IDENTITY_PRAGMA,\n          address: withPrefix(service.addr),\n          keyId: service.keyId,\n        },\n        params: service.params,\n        data: service.data,\n      }\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"authn\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", // wallets internal id for the user\n//   \"identity\": {\n//     \"address\": \"0x____\"\n//   },\n//   \"provider\": {\n//     \"address\": \"0x____\",\n//     \"name\": \"Best Wallet\",\n//     \"description\": \"The Best Wallet\"\n//     \"icon\": \"https://\",\n//   }\n// }\nexport function normalizeAuthn(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.authn,\n        id: service.pid,\n        provider: {\n          address: withPrefix(service.addr),\n          name: service.name,\n          icon: service.icon,\n        },\n      }\n  }\n}\n","import {SERVICE_PRAGMA, OPEN_ID_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"open-id\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"method: \"data\",\n//   \"data\": {\n//      \"profile\": {\n//        \"name\": \"Bob\",\n//        \"family_name\": \"Builder\",\n//        \"given_name\": \"Robert\",\n//        \"middle_name\": \"the\",\n//        \"nickname\": \"Bob the Builder\",\n//        \"perferred_username\": \"bob\",\n//        \"profile\": \"https://www.bobthebuilder.com/\",\n//        \"picture\": \"https://avatars.onflow.org/avatar/bob\",\n//        \"gender\": \"...\",\n//        \"birthday\": \"2001-01-18\",\n//        \"zoneinfo\": \"America/Vancouver\",\n//        \"locale\": \"en-us\",\n//        \"updated_at\": \"1614970797388\"\n//      },\n//      \"email\": {\n//        \"email\": \"bob@bob.bob\",\n//        \"email_verified\": true\n//      },\n//      \"address\": {\n//        \"address\": \"One Apple Park Way, Cupertino, CA 95014, USA\"\n//      },\n//      \"phone\": {\n//        \"phone_number\": \"+1 (xxx) yyy-zzzz\",\n//        \"phone_number_verified\": true\n//      },\n//      \"social\": {\n//        \"twitter\": \"@_qvvg\",\n//        \"twitter_verified\": true\n//      },\n//   }\n// }\nexport function normalizeOpenId(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return null\n  }\n}\n","// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"user-signature\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"IFRAME/RPC\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", // wallets internal id for the user\n//   \"data\": {}, // included in body of user-signature request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizeUserSignature(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      throw new Error(\"Invalid user-signature service\")\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport * as rlp from \"@onflow/rlp\"\nimport {fetchServices} from \"./fetch-services\"\nimport {mergeServices} from \"./merge-services\"\nimport {USER_PRAGMA} from \"./normalize/__vsn\"\nimport {normalizeService} from \"./normalize/service\"\n\nfunction deriveCompositeId(authn) {\n  return rlp\n    .encode([\n      authn.provider.address || authn.provider.name || \"UNSPECIFIED\",\n      authn.id,\n    ])\n    .toString(\"hex\")\n}\n\nfunction normalizeData(data) {\n  data.addr = data.addr ? withPrefix(data.addr) : null\n  data.paddr = data.paddr ? withPrefix(data.paddr) : null\n  return data\n}\n\nfunction findService(type, services) {\n  return services.find(d => d.type === type)\n}\n\nexport async function buildUser(data) {\n  data = normalizeData(data)\n\n  var services = mergeServices(\n    data.services || [],\n    await fetchServices(data.hks, data.code)\n  ).map(service => normalizeService(service, data))\n\n  const authn = findService(\"authn\", services)\n\n  return {\n    ...USER_PRAGMA,\n    addr: withPrefix(data.addr),\n    cid: deriveCompositeId(authn),\n    loggedIn: true,\n    services: services,\n    expiresAt: data.exp,\n  }\n}\n","export function serviceOfType(services = [], type) {\n  return services.find(service => service.type === type)\n}\n","export function serviceEndpoint(service) {\n  const url = new URL(service.endpoint)\n  url.searchParams.append(\"l6n\", window.location.origin)\n  if (service.params != null) {\n    for (let [key, value] of Object.entries(service.params || {})) {\n      url.searchParams.append(key, value)\n    }\n  }\n  return url\n}\n","import {serviceEndpoint} from \"./service-endpoint\"\n\nexport function fetchService(service, opts = {}) {\n  const method = opts.method || \"POST\"\n  const body =\n    method === \"GET\"\n      ? undefined\n      : JSON.stringify(opts.data || service.data || {})\n\n  return fetch(serviceEndpoint(service), {\n    method: method,\n    headers: {\n      ...(service.headers || {}),\n      ...(opts.headers || {}),\n      \"Content-Type\": \"application/json\",\n    },\n    body: body,\n  }).then((d) => d.json())\n}\n","import {POLLING_RESPONSE_PRAGMA} from \"./__vsn\"\nimport {normalizeBackChannelRpc} from \"./back-channel-rpc\"\nimport {normalizeFrame} from \"./frame\"\n\n// {\n//    \"f_type\": \"PollingResponse\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"status\": \"PENDING\", // PENDING | APPROVED | DECLINED\n//    \"reason\": null,      // Reason for Declining Transaction\n//    \"data\": null,        // Return value for APPROVED\n//    \"updates\": BackChannelRpc,\n//    \"local\": Frame,\n// }\nexport function normalizePollingResponse(resp) {\n  if (resp == null) return null\n  if (!!resp.addr || !!resp.services) {\n    resp = {status: \"APPROVED\", data: {...resp}}\n  }\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return {\n        ...POLLING_RESPONSE_PRAGMA,\n        status: resp.status,\n        reason: resp.reason ?? null,\n        data: resp.compositeSignature || resp.data || {},\n        updates: normalizeBackChannelRpc(resp.authorizationUpdates),\n        local: normalizeFrame((resp.local || [])[0]),\n      }\n  }\n}\n","import {normalizePollingResponse} from \"../../../normalize/polling-response\"\nimport {serviceEndpoint} from \"./service-endpoint\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {fetchService} from \"./fetch-service\"\n\nconst OPTIONS = {\n  \"HTTP/GET\": \"GET\",\n  \"HTTP/POST\": \"POST\",\n}\n\nconst serviceMethod = service => {\n  invariant(\n    OPTIONS[service.method],\n    \"Invalid Service Method for type back-channel-rpc\",\n    {service}\n  )\n  return OPTIONS[service.method]\n}\n\nconst serviceBody = service => {\n  if (service.method === \"HTTP/GET\") return undefined\n  if (service.method === \"HTTP/POST\" && service.data != null)\n    return JSON.stringify(service.data)\n  return undefined\n}\n\nexport async function poll(service, canContinue = () => true) {\n  invariant(service, \"Missing Polling Service\", {service})\n  if (!canContinue()) throw new Error(\"Externally Halted\")\n\n  const resp = await fetchService(service, {\n    method: serviceMethod(service),\n  }).then(normalizePollingResponse)\n\n  switch (resp.status) {\n    case \"APPROVED\":\n      return resp.data\n    case \"DECLINED\":\n      throw new Error(`Declined: ${resp.reason || \"No reason supplied.\"}`)\n    default:\n      await new Promise(r => setTimeout(r, 500))\n      return poll(resp.updates, canContinue)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\n\nconst FRAME = \"FCL_IFRAME\"\n\nconst FRAME_STYLES = `\n  position:fixed;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n  height: 100vh;\n  width: 100vw;\n  display:block;\n  background:rgba(0,0,0,0.25);\n  z-index: 2147483647;\n  box-sizing: border-box;\n`\n\nexport function renderFrame(src) {\n  invariant(\n    !document.getElementById(FRAME),\n    \"Attempt at triggering multiple Frames\",\n    {src}\n  )\n\n  const $frame = document.createElement(\"iframe\")\n  $frame.src = src\n  $frame.id = FRAME\n  $frame.allow = \"usb *; hid *\"\n  $frame.frameBorder = \"0\"\n  $frame.style.cssText = FRAME_STYLES\n  document.body.append($frame)\n\n  const unmount = () => {\n    if (document.getElementById(FRAME)) {\n      document.getElementById(FRAME).remove()\n    }\n  }\n\n  return [$frame.contentWindow, unmount]\n}\n","const POP = \"FCL_POP\"\n\nlet popup = null\nlet previousUrl = null\n\nfunction popupWindow(url, windowName, win, w, h) {\n  const y = win.top.outerHeight / 2 + win.top.screenY - h / 2\n  const x = win.top.outerWidth / 2 + win.top.screenX - w / 2\n  return win.open(\n    url,\n    windowName,\n    `toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=${w}, height=${h}, top=${y}, left=${x}`\n  )\n}\n\nexport function renderPop(src) {\n  if (popup == null || popup?.closed) {\n    popup = popupWindow(src, POP, window, 640, 600)\n  } else if (previousUrl !== src) {\n    popup = popupWindow(src, POP, window, 640, 600)\n    popup.focus()\n  } else {\n    popup.focus()\n  }\n\n  previousUrl = src\n\n  var timer = setInterval(function () {\n    if (popup && popup.closed) {\n      clearInterval(timer)\n      popup = null\n    }\n  }, 1000)\n\n  const unmount = () => {\n    if (popup && !popup.closed) {\n      popup.close()\n      popup = null\n    }\n  }\n\n  return [popup, unmount]\n}\n","const TAB = \"FCL_TAB\"\n\nlet tab = null\nlet previousUrl = null\n\nexport function renderTab(src) {\n  if (tab == null || tab?.closed) {\n    tab = window.open(src, \"_blank\")\n  } else if (previousUrl !== src) {\n    tab = window.open(src, \"_blank\")\n    tab.focus()\n  } else {\n    tab.focus()\n  }\n\n  previousUrl = src\n\n  var timer = setInterval(function () {\n    if (tab && tab.closed) {\n      clearInterval(timer)\n      tab = null\n    }\n  }, 1000)\n\n  const unmount = () => {\n    if (tab && !tab.closed) {\n      tab.close()\n      tab = null\n    }\n  }\n\n  return [tab, unmount]\n}\n","import {renderFrame} from \"./strategies/utils/render-frame\"\nimport {renderPop} from \"./strategies/utils/render-pop\"\nimport {renderTab} from \"./strategies/utils/render-tab\"\nimport {serviceEndpoint} from \"./strategies/utils/service-endpoint\"\n\nconst VIEWS = {\n  \"VIEW/IFRAME\": renderFrame,\n  \"VIEW/POP\": renderPop,\n  \"VIEW/TAB\": renderTab,\n}\n\nexport async function execLocal(service, opts = {}) {\n  try {\n    return VIEWS[service.method](serviceEndpoint(service), opts)\n  } catch (error) {\n    console.error(\"execLocal({service, opts = {}})\", error, {service, opts})\n    throw error\n  }\n}\n","import {fetchService} from \"./utils/fetch-service\"\nimport {normalizePollingResponse} from \"../../normalize/polling-response\"\nimport {normalizeLocalView} from \"../../normalize/local-view\"\nimport {poll} from \"./utils/poll\"\nimport {execLocal} from \"../exec-local\"\n\nexport async function execHttpPost(service, signable, opts = {}) {\n  signable.data = service.data\n  const resp = await fetchService(service, {\n    data: signable,\n  }).then(normalizePollingResponse)\n\n  if (resp.status === \"APPROVED\") {\n    return resp.data\n  } else if (resp.status === \"DECLINED\") {\n    throw new Error(`Declined: ${resp.reason || \"No reason supplied.\"}`)\n  } else if (resp.status === \"PENDING\") {\n    var canContinue = true\n    const [_, unmount] = await execLocal(normalizeLocalView(resp.local))\n\n    const close = () => {\n      try {\n        unmount()\n        canContinue = false\n      } catch (error) {\n        console.error(\"Frame Close Error\", error)\n      }\n    }\n\n    return poll(resp.updates, () => canContinue)\n      .then(serviceResponse => {\n        close()\n        return serviceResponse\n      })\n      .catch(error => {\n        console.error(error)\n        close()\n        throw error\n      })\n  } else {\n    console.error(`Auto Decline: Invalid Response`, {service, resp})\n    throw new Error(`Auto Decline: Invalid Response`)\n  }\n}\n","import {renderFrame} from \"./render-frame\"\nimport {serviceEndpoint} from \"./service-endpoint\"\n\nconst CLOSE_EVENT = \"FCL:VIEW:CLOSE\"\nconst READY_EVENT = \"FCL:VIEW:READY\"\nconst RESPONSE_EVENT = \"FCL:VIEW:RESPONSE\"\n\nconst noop = () => {}\nconst _ = e => typeof e === \"string\" && e.toLowerCase()\nconst deprecate = (was, want) =>\n  console.warn(\n    \"DEPRECATION NOTICE\",\n    `Received ${was}, please use ${want} for this and future versions of FCL`\n  )\n\nconst IGNORE = new Set([\n  \"monetizationstart\",\n  \"monetizationpending\",\n  \"monetizationprogress\",\n  \"monetizationstop\",\n])\n\nexport function frame(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  var tab = null\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n\n  window.addEventListener(\"message\", internal)\n  const [$frame, unmount] = renderFrame(serviceEndpoint(service))\n  return {send, close}\n\n  function internal(e) {\n    try {\n      if (typeof e.data !== \"object\") return\n      if (IGNORE.has(e.data.type)) return\n      if (_(e.data.type) === _(CLOSE_EVENT)) close()\n      if (_(e.data.type) === _(READY_EVENT)) onReady(e, {send, close})\n      if (_(e.data.type) === _(RESPONSE_EVENT)) onResponse(e, {send, close})\n      onMessage(e, {send, close})\n\n      // Backwards Compatible\n      if (_(e.data.type) === _(\"FCL:FRAME:READY\")) {\n        deprecate(e.data.type, READY_EVENT)\n        onReady(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL:FRAME:RESPONSE\")) {\n        deprecate(e.data.type, RESPONSE_EVENT)\n        onResponse(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL:FRAME:CLOSE\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n      //\n      if (_(e.data.type) === _(\"FCL::CHALLENGE::RESPONSE\")) {\n        deprecate(e.data.type, RESPONSE_EVENT)\n        onResponse(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL::AUTHZ_READY\")) {\n        deprecate(e.data.type, READY_EVENT)\n        onReady(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL::CHALLENGE::CANCEL\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n      if (_(e.data.type) === _(\"FCL::CANCEL\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n    } catch (error) {\n      console.error(\"Frame Callback Error\", error)\n      close()\n    }\n  }\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", internal)\n      if (tab != null) tab.close()\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Frame Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $frame.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Frame Send Error\", msg, error)\n    }\n  }\n}\n","import {renderPop} from \"./render-pop\"\nimport {serviceEndpoint} from \"./service-endpoint\"\n\nconst CLOSE_EVENT = \"FCL:VIEW:CLOSE\"\nconst READY_EVENT = \"FCL:VIEW:READY\"\nconst RESPONSE_EVENT = \"FCL:VIEW:RESPONSE\"\n\nconst noop = () => {}\nconst _ = e => typeof e === \"string\" && e.toLowerCase()\nconst deprecate = (was, want) =>\n  console.warn(\n    \"DEPRECATION NOTICE\",\n    `Received ${was}, please use ${want} for this and future versions of FCL`\n  )\n\nconst IGNORE = new Set([\n  \"monetizationstart\",\n  \"monetizationpending\",\n  \"monetizationprogress\",\n  \"monetizationstop\",\n])\n\nexport function pop(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  var tab = null\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n\n  window.addEventListener(\"message\", internal)\n  const [$pop, unmount] = renderPop(serviceEndpoint(service))\n  return {send, close}\n\n  function internal(e) {\n    try {\n      if (typeof e.data !== \"object\") return\n      if (IGNORE.has(e.data.type)) return\n      if (_(e.data.type) === _(CLOSE_EVENT)) close()\n      if (_(e.data.type) === _(READY_EVENT)) onReady(e, {send, close})\n      if (_(e.data.type) === _(RESPONSE_EVENT)) onResponse(e, {send, close})\n      onMessage(e, {send, close})\n\n      // Backwards Compatible\n      if (_(e.data.type) === _(\"FCL:FRAME:READY\")) {\n        deprecate(e.data.type, READY_EVENT)\n        onReady(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL:FRAME:RESPONSE\")) {\n        deprecate(e.data.type, RESPONSE_EVENT)\n        onResponse(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL:FRAME:CLOSE\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n      //\n      if (_(e.data.type) === _(\"FCL::CHALLENGE::RESPONSE\")) {\n        deprecate(e.data.type, RESPONSE_EVENT)\n        onResponse(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL::AUTHZ_READY\")) {\n        deprecate(e.data.type, READY_EVENT)\n        onReady(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL::CHALLENGE::CANCEL\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n      if (_(e.data.type) === _(\"FCL::CANCEL\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n    } catch (error) {\n      console.error(\"Popup Callback Error\", error)\n      close()\n    }\n  }\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", internal)\n      if (tab != null) tab.close()\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Popup Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $pop.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Popup Send Error\", msg, error)\n    }\n  }\n}\n","import {renderTab} from \"./render-tab\"\nimport {serviceEndpoint} from \"./service-endpoint\"\n\nconst CLOSE_EVENT = \"FCL:VIEW:CLOSE\"\nconst READY_EVENT = \"FCL:VIEW:READY\"\nconst RESPONSE_EVENT = \"FCL:VIEW:RESPONSE\"\n\nconst noop = () => {}\nconst _ = e => typeof e === \"string\" && e.toLowerCase()\nconst deprecate = (was, want) =>\n  console.warn(\n    \"DEPRECATION NOTICE\",\n    `Received ${was}, please use ${want} for this and future versions of FCL`\n  )\n\nconst IGNORE = new Set([\n  \"monetizationstart\",\n  \"monetizationpending\",\n  \"monetizationprogress\",\n  \"monetizationstop\",\n])\n\nexport function tab(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  var tab = null\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n\n  window.addEventListener(\"message\", internal)\n  const [$tab, unmount] = renderTab(serviceEndpoint(service))\n  return {send, close}\n\n  function internal(e) {\n    try {\n      if (typeof e.data !== \"object\") return\n      if (IGNORE.has(e.data.type)) return\n      if (_(e.data.type) === _(CLOSE_EVENT)) close()\n      if (_(e.data.type) === _(READY_EVENT)) onReady(e, {send, close})\n      if (_(e.data.type) === _(RESPONSE_EVENT)) onResponse(e, {send, close})\n      onMessage(e, {send, close})\n\n      // Backwards Compatible\n      if (_(e.data.type) === _(\"FCL:FRAME:READY\")) {\n        deprecate(e.data.type, READY_EVENT)\n        onReady(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL:FRAME:RESPONSE\")) {\n        deprecate(e.data.type, RESPONSE_EVENT)\n        onResponse(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL:FRAME:CLOSE\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n      //\n      if (_(e.data.type) === _(\"FCL::CHALLENGE::RESPONSE\")) {\n        deprecate(e.data.type, RESPONSE_EVENT)\n        onResponse(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL::AUTHZ_READY\")) {\n        deprecate(e.data.type, READY_EVENT)\n        onReady(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL::CHALLENGE::CANCEL\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n      if (_(e.data.type) === _(\"FCL::CANCEL\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n    } catch (error) {\n      console.error(\"Tab Callback Error\", error)\n      close()\n    }\n  }\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", internal)\n      if (tab != null) tab.close()\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Tab Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $tab.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Tab Send Error\", msg, error)\n    }\n  }\n}\n","import {execHttpPost} from \"./strategies/http-post\"\nimport {execIframeRPC} from \"./strategies/iframe-rpc\"\nimport {execPopRPC} from \"./strategies/pop-rpc\"\nimport {execTabRPC} from \"./strategies/tab-rpc\"\n\nconst STRATEGIES = {\n  \"HTTP/RPC\": execHttpPost,\n  \"HTTP/POST\": execHttpPost,\n  \"IFRAME/RPC\": execIframeRPC,\n  \"POP/RPC\": execPopRPC,\n  \"TAB/RPC\": execTabRPC,\n}\n\nexport async function execService({service, msg = {}, opts = {}}) {\n  try {\n    return STRATEGIES[service.method](service, msg, opts)\n  } catch (error) {\n    console.error(\"execService({service, msg = {}, opts = {}})\", error, {service, msg, opts})\n    throw error\n  }\n}","import {uid} from \"@onflow/util-uid\"\nimport {frame} from \"./utils/frame\"\nimport {normalizePollingResponse} from \"../../normalize/polling-response\"\nimport {configLens} from \"../../../default-config\"\n\nexport function execIframeRPC(service, body, opts) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const includeOlderJsonRpcCall = opts.includeOlderJsonRpcCall\n\n    body.data = service.data\n\n    frame(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n            },\n            config: {\n              services: await configLens(/^service\\./),\n              app: await configLens(/^app\\.detail\\./),\n            },\n          })\n          send({\n            type: \"FCL:FRAME:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n            },\n            config: {\n              services: await configLens(/^service\\./),\n              app: await configLens(/^app\\.detail\\./),\n            },\n            deprecated: {\n              message:\n                \"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n              deprecated: {\n                message:\n                  \"jsonrpc is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n              },\n            })\n          }\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execIframeRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execIframeRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n    })\n  })\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {pop} from \"./utils/pop\"\nimport {normalizePollingResponse} from \"../../normalize/polling-response\"\nimport {configLens} from \"../../../default-config\"\n\nexport function execPopRPC(service, body, opts) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const includeOlderJsonRpcCall = opts.includeOlderJsonRpcCall\n\n    body.data = service.data\n\n    pop(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n            },\n            config: {\n              services: await configLens(/^service\\./),\n              app: await configLens(/^app\\.detail\\./),\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n            })\n          }\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n    })\n  })\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {tab} from \"./utils/tab\"\nimport {normalizePollingResponse} from \"../../normalize/polling-response\"\nimport {configLens} from \"../../../default-config\"\n\nexport function execTabRPC(service, body, opts) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const includeOlderJsonRpcCall = opts.includeOlderJsonRpcCall\n\n    body.data = service.data\n\n    tab(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n            },\n            config: {\n              services: await configLens(/^service\\./),\n              app: await configLens(/^app\\.detail\\./),\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n            })\n          }\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n    })\n  })\n}\n","import {COMPOSITE_SIGNATURE_PRAGMA} from \"./__vsn\"\nimport {sansPrefix} from \"@onflow/util-address\"\n\n// {\n//    \"f_type\": \"CompositeSignature\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"addr\": \"_____\",         // sans-prefix\n//    \"signature\": \"adfe1234\", // hex\n//    \"keyId\": 3,\n// }\nexport function normalizeCompositeSignature(resp) {\n  if (resp == null) return null\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return {\n        ...COMPOSITE_SIGNATURE_PRAGMA,\n        addr: sansPrefix(resp.addr || resp.address),\n        signature: resp.signature || resp.sig,\n        keyId: resp.keyId,\n      }\n  }\n}\n","import \"../default-config\"\nimport {account, config} from \"@onflow/sdk\"\nimport {spawn, send, INIT, SUBSCRIBE, UNSUBSCRIBE} from \"@onflow/util-actor\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {buildUser} from \"./build-user\"\nimport {serviceOfType} from \"./service-of-type\"\nimport {execService} from \"./exec-service\"\nimport {query} from \"../exec/query\"\nimport {normalizeCompositeSignature} from \"./normalize/composite-signature\"\nimport AsyncStorage from '@react-native-community/async-storage';\n\nconst NAME = \"CURRENT_USER\"\nconst UPDATED = \"CURRENT_USER/UPDATED\"\nconst SNAPSHOT = \"SNAPSHOT\"\nconst SET_CURRENT_USER = \"SET_CURRENT_USER\"\nconst DEL_CURRENT_USER = \"DEL_CURRENT_USER\"\n\nconst DATA = `{\n  \"f_type\": \"User\",\n  \"f_vsn\": \"1.0.0\",\n  \"addr\":null,\n  \"cid\":null,\n  \"loggedIn\":null,\n  \"expiresAt\":null,\n  \"services\":[]\n}`\n\nconst coldStorage = {\n  get: async () => {\n    const fallback = JSON.parse(DATA)\n    const stored = JSON.parse(AsyncStorage.getItem(NAME))\n    if (stored != null && fallback[\"f_vsn\"] !== stored[\"f_vsn\"]) {\n      AsyncStorage.removeItem(NAME)\n      return fallback\n    }\n    return stored || fallback\n  },\n  put: async data => {\n    AsyncStorage.setItem(NAME, JSON.stringify(data))\n    return data\n  },\n}\n\nconst canColdStorage = () => {\n  return config().get(\"persistSession\", true)\n}\n\nconst HANDLERS = {\n  [INIT]: async ctx => {\n    ctx.merge(JSON.parse(DATA))\n    if (await canColdStorage()) {\n      const user = await coldStorage.get()\n      if (notExpired(user)) ctx.merge(user)\n    }\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, {...ctx.all()})\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n  [SNAPSHOT]: async (ctx, letter) => {\n    letter.reply({...ctx.all()})\n  },\n  [SET_CURRENT_USER]: async (ctx, letter, data) => {\n    ctx.merge(data)\n    if (await canColdStorage()) coldStorage.put(ctx.all())\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [DEL_CURRENT_USER]: async (ctx, letter) => {\n    ctx.merge(JSON.parse(DATA))\n    if (await canColdStorage()) coldStorage.put(ctx.all())\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n}\n\nconst identity = v => v\nconst spawnCurrentUser = () => spawn(HANDLERS, NAME)\n\nfunction notExpired(user) {\n  return (\n    user.expiresAt == null ||\n    user.expiresAt === 0 ||\n    user.expiresAt > Date.now()\n  )\n}\n\nasync function authenticate() {\n  return new Promise(async (resolve, reject) => {\n    spawnCurrentUser()\n    const user = await snapshot()\n    if (user.loggedIn && notExpired(user)) return resolve(user)\n\n    const discoveryWallet = await config.first([\n      \"discovery.wallet\",\n      \"challenge.handshake\",\n    ])\n\n    const method = await config.first([\"discovery.wallet.method\"], \"IFRAME/RPC\")\n\n    try {\n      const response = await execService({\n        service: {\n          endpoint: discoveryWallet,\n          method: method,\n        },\n      })\n      send(NAME, SET_CURRENT_USER, await buildUser(response))\n    } catch (e) {\n      console.error(\"Error while authenticating\", e)\n    } finally {\n      resolve(await snapshot())\n    }\n  })\n}\n\nfunction unauthenticate() {\n  spawnCurrentUser()\n  send(NAME, DEL_CURRENT_USER)\n}\n\nconst normalizePreAuthzResponse = authz => ({\n  f_type: \"PreAuthzResponse\",\n  f_vsn: \"1.0.0\",\n  proposer: (authz || {}).proposer,\n  payer: (authz || {}).payer || [],\n  authorization: (authz || {}).authorization || [],\n})\n\nfunction resolvePreAuthz(authz) {\n  const resp = normalizePreAuthzResponse(authz)\n  const axs = []\n\n  if (resp.proposer != null) axs.push([\"PROPOSER\", resp.proposer])\n  for (let az of resp.payer || []) axs.push([\"PAYER\", az])\n  for (let az of resp.authorization || []) axs.push([\"AUTHORIZER\", az])\n\n  var result = axs.map(([role, az]) => ({\n    tempId: [az.identity.address, az.identity.keyId].join(\"|\"),\n    addr: az.identity.address,\n    keyId: az.identity.keyId,\n    signingFunction(signable) {\n      return execService({service: az, msg: signable})\n    },\n    role: {\n      proposer: role === \"PROPOSER\",\n      payer: role === \"PAYER\",\n      authorizer: role === \"AUTHORIZER\",\n    },\n  }))\n  return result\n}\n\nasync function authorization(account) {\n  spawnCurrentUser()\n  const user = await authenticate()\n  const authz = serviceOfType(user.services, \"authz\")\n\n  const preAuthz = serviceOfType(user.services, \"pre-authz\")\n  if (preAuthz) {\n    return {\n      ...account,\n      tempId: \"CURRENT_USER\",\n      async resolve(account, preSignable) {\n        return resolvePreAuthz(\n          await execService({service: preAuthz, msg: preSignable})\n        )\n      },\n    }\n  }\n\n  return {\n    ...account,\n    tempId: \"CURRENT_USER\",\n    resolve: null,\n    addr: sansPrefix(authz.identity.address),\n    keyId: authz.identity.keyId,\n    sequenceNum: null,\n    signature: null,\n    async signingFunction(signable) {\n      return normalizeCompositeSignature(\n        await execService({\n          service: authz,\n          msg: signable,\n          opts: {\n            includeOlderJsonRpcCall: true,\n          },\n        })\n      )\n    },\n  }\n}\n\nfunction subscribe(callback) {\n  spawnCurrentUser()\n  const EXIT = \"@EXIT\"\n  const self = spawn(async ctx => {\n    ctx.send(NAME, SUBSCRIBE)\n    while (1) {\n      const letter = await ctx.receive()\n      if (letter.tag === EXIT) {\n        ctx.send(NAME, UNSUBSCRIBE)\n        return\n      }\n      callback(letter.data)\n    }\n  })\n  return () => send(self, EXIT)\n}\n\nfunction snapshot() {\n  spawnCurrentUser()\n  return send(NAME, SNAPSHOT, null, {expectReply: true, timeout: 0})\n}\n\nasync function info() {\n  spawnCurrentUser()\n  const {addr} = await snapshot()\n  if (addr == null) throw new Error(\"No Flow Address for Current User\")\n  return account(addr)\n}\n\nconst makeSignable = msg => {\n  invariant(/^[0-9a-f]+$/i.test(msg), \"Message must be a hex string\")\n\n  return {\n    message: msg,\n  }\n}\n\nasync function signUserMessage(msg) {\n  spawnCurrentUser()\n  const user = await authenticate()\n  const signingService = serviceOfType(user.services, \"user-signature\")\n\n  invariant(\n    signingService,\n    \"Current user must have authorized a signing service.\"\n  )\n\n  try {\n    const response = await execService({\n      service: signingService,\n      msg: makeSignable(msg),\n    })\n    if (Array.isArray(response)) {\n      return response.map(compSigs => normalizeCompositeSignature(compSigs))\n    } else {\n      return [normalizeCompositeSignature(response)]\n    }\n  } catch (error) {\n    return error\n  }\n}\n\nconst VERIFY_SIG_SCRIPT = `\nimport Crypto\n    \npub fun main(\n  message: String,\n  rawPublicKeys: [String],\n  weights: [UFix64],\n  signAlgos: [UInt],\n  signatures: [String],\n): Bool {\n\n  let keyList = Crypto.KeyList()\n  \n  var i = 0\n  for rawPublicKey in rawPublicKeys {\n    keyList.add(\n      PublicKey(\n        publicKey: rawPublicKey.decodeHex(),\n        signatureAlgorithm: signAlgos[i] == 2 ? SignatureAlgorithm.ECDSA_P256 : SignatureAlgorithm.ECDSA_secp256k1 \n      ),\n      hashAlgorithm: HashAlgorithm.SHA3_256,\n      weight: weights[i],\n    )\n    i = i + 1\n  }\n\n  let signatureSet: [Crypto.KeyListSignature] = []\n\n  var j = 0\n  for signature in signatures {\n    signatureSet.append(\n      Crypto.KeyListSignature(\n        keyIndex: j,\n        signature: signature.decodeHex()\n      )\n    )\n    j = j + 1\n  }\n    \n  let signedData = message.decodeHex()\n  \n  return keyList.verify(\n    signatureSet: signatureSet,\n    signedData: signedData\n  )\n}\n`\n\nasync function verifyUserSignatures(msg, compSigs) {\n  invariant(/^[0-9a-f]+$/i.test(msg), \"Message must be a hex string\")\n  invariant(\n    Array.isArray(compSigs),\n    \"Must include an Array of composite signatures\"\n  )\n\n  let weights = []\n  let signAlgos = []\n  let signatures = []\n  const rawPubKeys = await Promise.all(\n    compSigs.map(async cs => {\n      invariant(typeof cs.addr === \"string\", \"addr must be a string\")\n      invariant(typeof cs.keyId === \"number\", \"keyId must be a number\")\n      invariant(typeof cs.signature === \"string\", \"signature must be a string\")\n\n      try {\n        const account = await account(cs.addr)\n        weights.push(account.keys[cs.keyId].weight.toFixed(1))\n        signAlgos.push(account.keys[cs.keyId].signAlgo)\n        signatures.push(cs.signature)\n        return account.keys[cs.keyId].publicKey\n      } catch (err) {\n        throw err\n      }\n    })\n  )\n\n  return await query({\n    cadence: `${VERIFY_SIG_SCRIPT}`,\n    args: (arg, t) => [\n      arg(msg, t.String),\n      arg(rawPubKeys, t.Array([t.String])),\n      arg(weights, t.Array(t.UFix64)),\n      arg(signAlgos, t.Array([t.UInt])),\n      arg(signatures, t.Array([t.String])),\n    ],\n  })\n}\n\nexport const currentUser = () => {\n  return {\n    authenticate,\n    unauthenticate,\n    authorization,\n    signUserMessage,\n    verifyUserSignatures,\n    subscribe,\n    snapshot,\n  }\n}\n","export async function fetchServices(servicesURL, code) {\n  if (servicesURL == null || code == null) return []\n\n  const url = new URL(servicesURL)\n  url.searchParams.append(\"code\", code)\n\n  const resp = await fetch(url, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then(d => d.json())\n\n  if (Array.isArray(resp)) return resp\n\n  // Backwards compatibility for First-Gen Wallet Providers\n  const services = []\n\n  // Convert authorizations into authz services\n  if (Array.isArray(resp.authorizations)) {\n    for (let service of resp.authorizations) {\n      services.push({\n        type: \"authz\",\n        keyId: resp.keyId,\n        ...service,\n      })\n    }\n  }\n\n  // Convert Provider info into an authn service\n  if (resp.provider != null) {\n    services.push({\n      type: \"authn\",\n      id: \"wallet-provider#authn\",\n      ...resp.provider,\n    })\n  }\n\n  return services\n}\n","import {withPrefix} from \"@onflow/util-address\"\n\nexport function mergeServices(sx1 = [], sx2 = []) {\n  // TODO: Make this smarter\n  return [...sx1, ...sx2]\n}\n","import \"../default-config\"\nimport {\n  spawn,\n  send,\n  subscriber,\n  snapshoter,\n  UPDATED,\n  SNAPSHOT,\n  INIT,\n  SUBSCRIBE,\n  UNSUBSCRIBE,\n} from \"@onflow/util-actor\"\nimport {send as fclSend, decode, getTransactionStatus} from \"@onflow/sdk\"\n\nconst RATE = 2500\nconst POLL = \"POLL\"\n\nconst fetchTxStatus = async transactionId => {\n  return fclSend([getTransactionStatus(transactionId)]).then(decode)\n}\n\nconst isExpired = tx => tx.status === 5\nconst isSealed = tx => tx.status >= 4\nconst isExecuted = tx => tx.status >= 3\nconst isFinalized = tx => tx.status >= 2\nconst isPending = tx => tx.status >= 1\nconst isUnknown = tx => tx.status >= 0\n\nconst isDiff = (cur, next) => {\n  return JSON.stringify(cur) !== JSON.stringify(next)\n}\n\nconst HANDLERS = {\n  [INIT]: async ctx => {\n    const tx = await fetchTxStatus(ctx.self())\n    if (!isSealed(tx)) setTimeout(() => ctx.sendSelf(POLL), RATE)\n    ctx.merge(tx)\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, ctx.all())\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n  [SNAPSHOT]: async (ctx, letter) => {\n    letter.reply(ctx.all())\n  },\n  [POLL]: async ctx => {\n    const tx = await fetchTxStatus(ctx.self())\n    if (!isSealed(tx)) setTimeout(() => ctx.sendSelf(POLL), RATE)\n    if (isDiff(ctx.all(), tx)) ctx.broadcast(UPDATED, tx)\n    ctx.merge(tx)\n  },\n}\n\nconst scoped = transactionId => {\n  if (typeof transactionId === \"object\")\n    transactionId = transactionId.transactionId\n  if (transactionId == null) throw new Error(\"transactionId required\")\n  return transactionId\n}\n\nconst spawnTransaction = transactionId => {\n  return spawn(HANDLERS, scoped(transactionId))\n}\n\nexport function transaction(transactionId) {\n  function snapshot() {\n    return snapshoter(transactionId, spawnTransaction)\n  }\n\n  function subscribe(callback) {\n    return subscriber(scoped(transactionId), spawnTransaction, callback)\n  }\n\n  function once(predicate) {\n    return function innerOnce(opts = {}) {\n      const suppress = opts.suppress || false\n      return new Promise((resolve, reject) => {\n        const unsub = subscribe(txStatus => {\n          if (txStatus.statusCode && !suppress) {\n            reject(txStatus.errorMessage)\n            unsub()\n          } else if (predicate(txStatus)) {\n            resolve(txStatus)\n            unsub()\n          }\n        })\n      })\n    }\n  }\n\n  return {\n    snapshot,\n    subscribe,\n    onceFinalized: once(isFinalized),\n    onceExecuted: once(isExecuted),\n    onceSealed: once(isSealed),\n  }\n}\n\ntransaction.isUnknown = isUnknown\ntransaction.isPending = isPending\ntransaction.isFinalized = isFinalized\ntransaction.isExecuted = isExecuted\ntransaction.isSealed = isSealed\ntransaction.isExpired = isExpired\n","import {spawn, subscriber, SUBSCRIBE, UNSUBSCRIBE} from \"@onflow/util-actor\"\nimport {config, latestBlock} from \"@onflow/sdk\"\nexport {getEvents} from \"@onflow/sdk\"\nimport {send} from \"@onflow/sdk\"\nimport {decode} from \"@onflow/sdk\"\n\nconst RATE = 10000\nconst UPDATED = \"UPDATED\"\nconst TICK = \"TICK\"\n\nconst scheduleTick = async ctx => {\n  return setTimeout(\n    () => ctx.sendSelf(TICK),\n    await config().get(\"fcl.eventPollRate\", RATE)\n  )\n}\n\nconst HANDLERS = {\n  [TICK]: async ctx => {\n    if (!ctx.hasSubs()) return\n    let hwm = ctx.get(\"hwm\")\n    if (hwm == null) {\n      ctx.put(\"hwm\", await latestBlock())\n      ctx.put(\"tick\", await scheduleTick(ctx))\n    } else {\n      let next = await latestBlock()\n      ctx.put(\"hwm\", next)\n      const data = await send([\n        getEvents(ctx.self(), hwm.height, next.height - 1),\n      ]).then(decode)\n      for (let d of data) ctx.broadcast(UPDATED, d.data)\n      ctx.put(\"tick\", await scheduleTick(ctx))\n    }\n  },\n  [SUBSCRIBE]: async (ctx, letter) => {\n    if (!ctx.hasSubs()) {\n      ctx.put(\"tick\", await scheduleTick(ctx))\n    }\n    ctx.subscribe(letter.from)\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n    if (!ctx.hasSubs()) {\n      clearTimeout(ctx.get(\"tick\"))\n      ctx.delete(\"tick\")\n      ctx.delete(\"hwm\")\n    }\n  },\n}\n\nconst spawnEvents = key => spawn(HANDLERS, key)\n\nexport function events(key) {\n  return {\n    subscribe: callback => subscriber(key, spawnEvents, callback),\n  }\n}\n","export const sendMsgToFCL = (type, msg = {}) => {\n  if (window.location !== window.parent.location) {\n    window.parent.postMessage({...msg, type}, \"*\")\n  } else {\n    window.opener.postMessage({...msg, type}, \"*\")\n  }\n}\n","export const onMessageFromFCL = (msg, cb = () => {}) => {\n  const buildData = data => {\n    if (data.deprecated)\n      console.warn(\"DEPRECATION NOTICE\", data.deprecated.message)\n    delete data?.body?.interaction\n\n    return data\n  }\n\n  const internal = e => {\n    const {data} = e\n    if (typeof data !== \"object\") return\n    if (typeof data == null) return\n    if (data.type === msg) return\n\n    cb(buildData(data))\n  }\n\n  window.addEventListener(\"message\", internal)\n  return () => window.removeEventListener(\"message\", internal)\n}\n","import \"./default-config\"\nexport {VERSION} from \"./VERSION\"\nexport {query} from \"./exec/query\"\nexport {mutate} from \"./exec/mutate\"\nexport {serialize} from \"./serialize\"\nexport {transaction as tx} from \"./transaction\"\nexport {events} from \"./events\"\n\nimport {currentUser} from \"./current-user\"\nexport {currentUser}\n\nexport const authenticate = () => currentUser().authenticate()\nexport const unauthenticate = () => currentUser().unauthenticate()\nexport const reauthenticate = () => {\n  currentUser().unauthenticate()\n  return currentUser().authenticate()\n}\nexport const signUp = () => currentUser().authenticate()\nexport const logIn = () => currentUser().authenticate()\n\nexport const authz = currentUser().authorization\n\nimport * as types from \"@onflow/types\"\nexport const t = types\n\nimport * as WalletUtils from \"./wallet-utils\"\nexport {WalletUtils}\n\nexport {TestUtils} from \"@onflow/sdk\"\nexport {config} from \"@onflow/sdk\"\nexport {send} from \"@onflow/sdk\"\nexport {decode} from \"@onflow/sdk\"\nexport {account} from \"@onflow/sdk\"\nexport {latestBlock} from \"@onflow/sdk\"\nexport {isOk, isBad, why, pipe, build} from \"@onflow/sdk\"\nexport {withPrefix, sansPrefix, display} from \"@onflow/util-address\"\nexport {template as cadence} from \"@onflow/util-template\"\nexport {template as cdc} from \"@onflow/util-template\"\nexport {createSignableVoucher} from \"@onflow/sdk\"\n\n// builders\nexport {transaction} from \"@onflow/sdk\"\nexport {script} from \"@onflow/sdk\"\nexport {ping} from \"@onflow/sdk\"\nexport {atBlockHeight} from \"@onflow/sdk\"\nexport {atBlockId} from \"@onflow/sdk\"\nexport {getAccount} from \"@onflow/sdk\"\nexport {getEvents} from \"@onflow/sdk\"\nexport {getEventsAtBlockHeightRange} from \"@onflow/sdk\"\nexport {getEventsAtBlockIds} from \"@onflow/sdk\"\nexport {getLatestBlock} from \"@onflow/sdk\"\nexport {getBlock} from \"@onflow/sdk\"\nexport {getBlockHeader} from \"@onflow/sdk\"\nexport {getBlockById} from \"@onflow/sdk\"\nexport {getBlockByHeight} from \"@onflow/sdk\"\nexport {getCollection} from \"@onflow/sdk\"\nexport {getTransactionStatus} from \"@onflow/sdk\"\nexport {getTransaction} from \"@onflow/sdk\"\nexport {authorizations, authorization} from \"@onflow/sdk\"\nexport {args, arg} from \"@onflow/sdk\"\nexport {proposer} from \"@onflow/sdk\"\nexport {payer} from \"@onflow/sdk\"\nexport {limit} from \"@onflow/sdk\"\nexport {ref} from \"@onflow/sdk\"\nexport {params, param} from \"@onflow/sdk\"\nexport {validator} from \"@onflow/sdk\"\nexport {invariant} from \"@onflow/sdk\"\n","export const VERSION = \"0.0.77-alpha.3\"\n","import {invariant} from \"@onflow/util-invariant\"\nimport * as sdk from \"@onflow/sdk\"\nimport {isRequired, isObject, isString, isFunc, isNumber} from \"./utils/is\"\nimport {normalizeArgs} from \"./utils/normalize-args\"\nimport {currentUser} from \"../current-user\"\nimport {transaction} from \"../transaction\"\n\n/** As the current user Mutate the Flow Blockchain\n *\n *  @arg {Object} opts - Mutation Options and configuration\n *  @arg {string} opts.cadence - Cadence Transaction used to mutate Flow\n *  @arg {ArgsFn} opts.args - Arguments passed to cadence transaction\n *  @arg {number} opts.limit - Compute Limit for transaction\n *  @returns {string} Transaction Id\n *\n *  Where:\n *    @callback ArgsFn\n *    @arg {ArgFn}  arg - Argument function to define a single argument\n *    @arg {Object} t   - Cadence Types object used to define the type\n *    @returns {args[]}\n *\n *    @callback ArgFn\n *    @arg {Any}  value - the value of the argument\n *    @arg {Type} type  - the cadence type of the value\n *    @returns {arg}\n *\n *  Example:\n *    fcl.mutate({\n *      cadence: `\n *        transaction(a: Int, b: Int, c: Address) {\n *          prepare(acct: AuthAccount) {\n *            log(acct)\n *            log(a)\n *            log(b)\n *            log(c)\n *          }\n *        }\n *      `,\n *      args: (arg, t) => [\n *        arg(6, t.Int),\n *        arg(7, t.Int),\n *        arg(\"0xba1132bc08f82fe2\", t.Address),\n *      ],\n *    })\n *\n *\n *  Options:\n *    type Options = {\n *      cadence: String!,\n *      args: (arg, t) => Array<Arg>,\n *      limit: Number,\n *      authz: AuthzFn, // will overload the trinity of signatory roles\n *      proposer: AuthzFn, // will overload the proposer signatory role\n *      payer: AuthzFn, // will overload the payer signatory role\n *      authorizations: [AuthzFn], // an array of authorization functions used as authorizations signatory roles\n *    }\n */\n\nconst noop = () => {}\n\nexport async function mutate(opts = {}) {\n  var txid\n  try {\n    await prepMutation(opts)\n\n    // Allow for a config to overwrite the authorization function.\n    // prettier-ignore\n    const authz = await sdk.config().get(\"fcl.authz\", currentUser().authorization)\n\n    // prettier-ignore\n    txid = sdk.send([\n      sdk.transaction(opts.cadence),\n\n      sdk.args(normalizeArgs(opts.args || [])),\n\n      opts.limit && isNumber(opts.limit) && sdk.limit(opts.limit),\n\n      // opts.proposer > opts.authz > authz\n      sdk.proposer(opts.proposer || opts.authz || authz),\n\n      // opts.payer > opts.authz > authz\n      sdk.payer(opts.payer || opts.authz || authz),\n\n      // opts.authorizations > [opts.authz > authz]\n      sdk.authorizations(opts.authorizations || [opts.authz || authz]),\n    ]).then(sdk.decode)\n\n    return txid\n  } catch (error) {\n    throw error\n  }\n}\n\nasync function prepMutation(opts) {\n  // prettier-ignore\n  invariant(isRequired(opts), \"mutate(opts) -- opts is required\")\n  // prettier-ignore\n  invariant(isObject(opts), \"mutate(opts) -- opts must be an object\")\n  // prettier-ignore\n  invariant(isRequired(opts.cadence), \"mutate({ cadence }) -- cadence is required\")\n  // prettier-ignore\n  invariant(isString(opts.cadence), \"mutate({ cadence }) -- cadence must be a string\")\n}\n","import {interaction, pipe} from \"@onflow/sdk\"\nimport {resolve as defaultResolve} from \"@onflow/sdk\"\nimport {config, createSignableVoucher} from \"@onflow/sdk\"\n\nexport const serialize = async (args = [], opts = {}) => {\n  const resolveFunction = await config.first(\n    [\"sdk.resolve\"],\n    opts.resolve || defaultResolve\n  )\n\n  if (Array.isArray(args)) args = await pipe(interaction(), args)\n\n  return JSON.stringify(\n    createSignableVoucher(await resolveFunction(args)),\n    null,\n    2\n  )\n}\n"],"names":["configLens","regex","config","where","Object","fromEntries","entries","map","value","replace","put","is","type","d","isRequired","isObject","isString","isFunc","isNumber","normalizeArgs","ax","sdk","arg","t","query","opts","invariant","cadence","preQuery","send","script","args","limit","then","decode","SERVICE_PRAGMA","f_type","f_vsn","IDENTITY_PRAGMA","USER_PRAGMA","POLLING_RESPONSE_PRAGMA","COMPOSITE_SIGNATURE_PRAGMA","normalizeFrame","service","old","endpoint","params","data","normalizeBackChannelRpc","method","normalizeLocalView","resp","serviceNormalizers","back-channel-rpc","pre-authz","uid","id","identity","address","withPrefix","addr","keyId","authz","authn","pid","provider","name","icon","frame","open-id","user-signature","Error","local-view","deriveCompositeId","rlp","encode","toString","serviceOfType","services","find","serviceEndpoint","url","URL","searchParams","append","window","location","origin","fetchService","body","undefined","JSON","stringify","fetch","headers","Content-Type","json","normalizePollingResponse","status","reason","compositeSignature","updates","authorizationUpdates","local","poll","canContinue","serviceMethod","Promise","r","setTimeout","OPTIONS","HTTP/GET","HTTP/POST","FRAME","renderFrame","src","document","getElementById","$frame","createElement","allow","frameBorder","style","cssText","contentWindow","remove","POP","popup","previousUrl","popupWindow","windowName","win","w","h","open","top","outerHeight","screenY","outerWidth","screenX","renderPop","_popup","closed","focus","timer","setInterval","clearInterval","close","tab","renderTab","_tab","VIEWS","VIEW/IFRAME","VIEW/POP","VIEW/TAB","execHttpPost","signable","error","console","execLocal","unmount","serviceResponse","CLOSE_EVENT","READY_EVENT","RESPONSE_EVENT","noop","_","e","toLowerCase","deprecate","was","want","warn","IGNORE","Set","execService","msg","STRATEGIES","HTTP/RPC","IFRAME/RPC","resolve","reject","includeOlderJsonRpcCall","onClose","onMessage","onReady","onResponse","addEventListener","internal","has","removeEventListener","postMessage","parse","recover","result","app","deprecated","message","jsonrpc","POP/RPC","$pop","pop","TAB/RPC","$tab","normalizeCompositeSignature","sansPrefix","signature","sig","pact","state","s","o","_settle","bind","v","observer","verifyUserSignatures","compSigs","test","Array","isArray","weights","signAlgos","signatures","all","cs","account","push","keys","weight","toFixed","signAlgo","publicKey","err","rawPubKeys","VERIFY_SIG_SCRIPT","String","UFix64","UInt","signUserMessage","spawnCurrentUser","authenticate","user","signingService","makeSignable","response","authorization","preAuthz","tempId","preSignable","resolvePreAuthz","sequenceNum","signingFunction","_Pact","prototype","onFulfilled","onRejected","this","callback","_this","_isSettledPact","thenable","snapshot","loggedIn","notExpired","first","discoveryWallet","finalizer","paddr","normalizeData","servicesURL","code","authorizations","fetchServices","hks","sx1","sx2","normalizeService","findService","cid","expiresAt","exp","buildUser","NAME","SET_CURRENT_USER","_catch","UPDATED","DATA","coldStorage","AsyncStorage","setItem","canColdStorage","get","HANDLERS","INIT","ctx","merge","fallback","stored","getItem","removeItem","SUBSCRIBE","letter","subscribe","from","UNSUBSCRIBE","unsubscribe","reply","broadcast","spawn","Date","now","unauthenticate","proposer","payer","normalizePreAuthzResponse","axs","role","az","join","authorizer","EXIT","self","update","stage","shouldContinue","_resumeAfterTest","_resumeAfterBody","updateValue","receive","tag","_exit2","expectReply","timeout","currentUser","POLL","fetchTxStatus","transactionId","fclSend","getTransactionStatus","isSealed","tx","isExecuted","isFinalized","sendSelf","SNAPSHOT","cur","next","scoped","spawnTransaction","transaction","subscriber","once","predicate","suppress","unsub","txStatus","statusCode","errorMessage","snapshoter","onceFinalized","onceExecuted","onceSealed","isUnknown","isPending","isExpired","scheduleTick","hasSubs","hwm","latestBlock","_put4","_put2","getEvents","height","_put3","_put6","clearTimeout","spawnEvents","key","parent","opener","cb","interaction","buildData","types","prepMutation","defaultResolve","resolveFunction","createSignableVoucher","pipe"],"mappings":"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"}