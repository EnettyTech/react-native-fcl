{"version":3,"file":"fcl.modern.js","sources":["../src/default-config.js","../src/VERSION.js","../src/exec/utils/is.js","../src/exec/utils/normalize-args.js","../src/exec/query.js","../src/current-user/normalize/__vsn.js","../src/current-user/normalize/frame.js","../src/current-user/normalize/back-channel-rpc.js","../src/current-user/normalize/local-view.js","../src/current-user/normalize/service.js","../src/current-user/normalize/pre-authz.js","../src/current-user/normalize/authz.js","../src/current-user/normalize/authn.js","../src/current-user/normalize/open-id.js","../src/current-user/normalize/user-signature.js","../src/current-user/build-user.js","../src/current-user/service-of-type.js","../src/current-user/exec-service/strategies/utils/service-endpoint.js","../src/current-user/exec-service/strategies/utils/fetch-service.js","../src/current-user/normalize/polling-response.js","../src/current-user/exec-service/strategies/utils/poll.js","../src/current-user/exec-service/strategies/utils/render-frame.js","../src/current-user/exec-service/strategies/utils/render-pop.js","../src/current-user/exec-service/strategies/utils/render-tab.js","../src/current-user/exec-service/exec-local.js","../src/current-user/exec-service/strategies/http-post.js","../src/current-user/exec-service/strategies/utils/frame.js","../src/current-user/exec-service/strategies/utils/pop.js","../src/current-user/exec-service/strategies/utils/tab.js","../src/current-user/exec-service/index.js","../src/current-user/exec-service/strategies/iframe-rpc.js","../src/current-user/exec-service/strategies/pop-rpc.js","../src/current-user/exec-service/strategies/tab-rpc.js","../src/current-user/normalize/composite-signature.js","../src/current-user/index.js","../src/current-user/merge-services.js","../src/current-user/fetch-services.js","../src/transaction/index.js","../src/exec/mutate.js","../src/serialize/index.js","../src/events/index.js","../src/wallet-utils/send-msg-to-fcl.js","../src/wallet-utils/on-message-from-fcl.js","../src/fcl.js"],"sourcesContent":["import {config} from \"@onflow/sdk\"\n\nconfig()\n  .put(\"accessNode.api\", \"http://localhost:8080\")\n  .put(\"discovery.wallet\", \"http://localhost:8701/fcl/authn\")\n  .put(\"discovery.wallet.method\", \"IFRAME/RPC\")\n\nexport async function configLens(regex) {\n  return Object.fromEntries(\n    Object.entries(await config().where(regex)).map(([key, value]) => [\n      key.replace(regex, \"\"),\n      value,\n    ])\n  )\n}\n","export const VERSION = \"0.0.77-alpha.3\"\n","const is = type => d => typeof d === type\n\nexport const isRequired = d => d != null\nexport const isObject = is(\"object\")\nexport const isString = is(\"string\")\nexport const isFunc = is(\"function\")\nexport const isNumber = is(\"number\")\n","import {isFunc} from \"./is\"\nimport * as sdk from \"@onflow/sdk\"\nimport * as t from \"@onflow/types\"\n\nexport function normalizeArgs(ax) {\n  if (isFunc(ax)) return ax(sdk.arg, t)\n  return []\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport * as sdk from \"@onflow/sdk\"\nimport * as t from \"@onflow/types\"\nimport {isRequired, isObject, isString, isFunc} from \"./utils/is\"\nimport {normalizeArgs} from \"./utils/normalize-args\"\n\n/** Query the Flow Blockchain\n *\n *  @arg {Object} opts         - Query Options and configuration\n *  @arg {string} opts.cadence - Cadence Script used to query Flow\n *  @arg {ArgsFn} opts.args    - Arguments passed to cadence script\n *  @arg {number} opts.limit   - Compute Limit for Query\n *  @returns {Promise<Response>}\n *\n *  Where:\n *    @callback ArgsFn\n *    @arg {ArgFn}  arg - Argument function to define a single argument\n *    @arg {Object} t   - Cadence Types object used to define the type\n *    @returns {args[]}\n *\n *    @callback ArgFn\n *    @arg {Any}  value - the value of the argument\n *    @arg {Type} type  - the cadence type of the value\n *    @returns {arg}\n *\n *  Example:\n *    const cadence = `\n *      cadence: `\n *        pub fun main(a: Int, b: Int, c: Address): Int {\n *          log(c)\n *          return a + b\n *        }\n *    `.trim()\n *\n *    const args = (arg, t) => [\n *      arg(5, t.Int),\n *      arg(7, t.Int),\n *      arg(\"0xb2db43ad6bc345fec9\", t.Address),\n *    ]\n *\n *    await query({ cadence, args })\n */\nexport async function query(opts = {}) {\n  await preQuery(opts)\n\n  // prettier-ignore\n  return sdk.send([\n    sdk.script(opts.cadence),\n    sdk.args(normalizeArgs(opts.args || [])),\n    opts.limit && typeof opts.limit === \"number\" && sdk.limit(opts.limit)\n  ]).then(sdk.decode)\n}\n\nasync function preQuery(opts) {\n  invariant(\n    isRequired(opts.cadence),\n    \"query({ cadence }) -- cadence is required\"\n  )\n\n  invariant(\n    isString(opts.cadence),\n    \"query({ cadence }) -- cadence must be a string\"\n  )\n}\n","export const SERVICE_PRAGMA = {\n  f_type: \"Service\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const IDENTITY_PRAGMA = {\n  f_type: \"Identity\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const PROVIDER_PRAGMA = {\n  f_type: \"Provider\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const USER_PRAGMA = {\n  f_type: \"USER\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const POLLING_RESPONSE_PRAGMA = {\n  f_type: \"PollingResponse\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const COMPOSITE_SIGNATURE_PRAGMA = {\n  f_type: \"CompositeSignature\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const OPEN_ID_PRAGMA = {\n  f_type: \"OpenId\",\n  f_vsn: \"1.0.0\",\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"type\": \"frame\",\n//    \"endpoint\": \"https://rawr\",\n//    \"data\": {},   // Sent to frame when ready\n//    \"params\": {}, // include in query params on frame\n// }\nexport function normalizeFrame(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        old: service,\n        ...SERVICE_PRAGMA,\n        type: \"frame\",\n        endpoint: service.endpoint,\n        params: service.params || {},\n        data: service.data || {},\n      }\n  }\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"type\": \"back-channel-rpc\",\n//    \"endpoint\": \"https://rawr\",\n//    \"method\": \"HTTP/GET\", // HTTP/GET | HTTP/POST\n//    \"data\": {},           // included in body of rpc\n//    \"params\": {},         // included as query params on endpoint url\n// }\nexport function normalizeBackChannelRpc(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: \"back-channel-rpc\",\n        endpoint: service.endpoint,\n        method: service.method,\n        params: service.params || {},\n        data: service.data || {},\n      }\n  }\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    type: \"local-view\",\n//    method: \"VIEW/IFRAME\",\n//    endpoint: \"https://woot.org/authz/local\",\n//    data: {},\n//    params: {},\n// }\nexport function normalizeLocalView(resp) {\n  if (resp == null) return null\n  if (resp.method == null) {\n    resp = {...resp, type: \"local-view\", method: \"VIEW/IFRAME\"}\n  }\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: resp.type || \"local-view\",\n        method: resp.method,\n        endpoint: resp.endpoint,\n        data: resp.data || {},\n        params: resp.params || {},\n      }\n  }\n}\n","import {normalizeAuthn} from \"./authn\"\nimport {normalizeAuthz} from \"./authz\"\nimport {normalizePreAuthz} from \"./pre-authz\"\nimport {normalizeFrame} from \"./frame\"\nimport {normalizeBackChannelRpc} from \"./back-channel-rpc\"\nimport {normalizeOpenId} from \"./open-id\"\nimport {normalizeUserSignature} from \"./user-signature\"\nimport {normalizeLocalView} from \"./local-view\"\n\nexport function normalizeServices(services, data) {\n  return services.map(service => normalizeService(service, data))\n}\n\nconst serviceNormalizers = {\n  \"back-channel-rpc\": normalizeBackChannelRpc,\n  \"pre-authz\": normalizePreAuthz,\n  authz: normalizeAuthz,\n  authn: normalizeAuthn,\n  frame: normalizeFrame,\n  \"open-id\": normalizeOpenId,\n  \"user-signature\": normalizeUserSignature,\n  \"local-view\": normalizeLocalView,\n}\n\nexport function normalizeService(service, data) {\n  try {\n    var normalized = serviceNormalizers[service.type](service, data)\n    return normalized\n  } catch (error) {\n    console.error(\n      `Unrecognized FCL Service Type [${service.type}]`,\n      service,\n      error\n    )\n    return service\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA, IDENTITY_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"pre-authz\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"identity\": {\n//      \"address\": \"0x______\",\n//      \"keyId\": 0,\n//   },\n//   \"data\": {}, // included in body of pre-authz request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizePreAuthz(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.endpoint,\n        method: service.method,\n        identity: {\n          ...IDENTITY_PRAGMA,\n          address: withPrefix(service.addr),\n          keyId: service.keyId,\n        },\n        params: service.params,\n        data: service.data,\n      }\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA, IDENTITY_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"authz\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"identity\": {\n//      \"address\": \"0x______\",\n//      \"keyId\": 0,\n//   },\n//   \"data\": {}, // included in body of authz request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizeAuthz(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.endpoint,\n        method: service.method,\n        identity: {\n          ...IDENTITY_PRAGMA,\n          address: withPrefix(service.addr),\n          keyId: service.keyId,\n        },\n        params: service.params,\n        data: service.data,\n      }\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"authn\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", // wallets internal id for the user\n//   \"identity\": {\n//     \"address\": \"0x____\"\n//   },\n//   \"provider\": {\n//     \"address\": \"0x____\",\n//     \"name\": \"Best Wallet\",\n//     \"description\": \"The Best Wallet\"\n//     \"icon\": \"https://\",\n//   }\n// }\nexport function normalizeAuthn(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.authn,\n        id: service.pid,\n        provider: {\n          address: withPrefix(service.addr),\n          name: service.name,\n          icon: service.icon,\n        },\n      }\n  }\n}\n","import {SERVICE_PRAGMA, OPEN_ID_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"open-id\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"method: \"data\",\n//   \"data\": {\n//      \"profile\": {\n//        \"name\": \"Bob\",\n//        \"family_name\": \"Builder\",\n//        \"given_name\": \"Robert\",\n//        \"middle_name\": \"the\",\n//        \"nickname\": \"Bob the Builder\",\n//        \"perferred_username\": \"bob\",\n//        \"profile\": \"https://www.bobthebuilder.com/\",\n//        \"picture\": \"https://avatars.onflow.org/avatar/bob\",\n//        \"gender\": \"...\",\n//        \"birthday\": \"2001-01-18\",\n//        \"zoneinfo\": \"America/Vancouver\",\n//        \"locale\": \"en-us\",\n//        \"updated_at\": \"1614970797388\"\n//      },\n//      \"email\": {\n//        \"email\": \"bob@bob.bob\",\n//        \"email_verified\": true\n//      },\n//      \"address\": {\n//        \"address\": \"One Apple Park Way, Cupertino, CA 95014, USA\"\n//      },\n//      \"phone\": {\n//        \"phone_number\": \"+1 (xxx) yyy-zzzz\",\n//        \"phone_number_verified\": true\n//      },\n//      \"social\": {\n//        \"twitter\": \"@_qvvg\",\n//        \"twitter_verified\": true\n//      },\n//   }\n// }\nexport function normalizeOpenId(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return null\n  }\n}\n","// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"user-signature\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"IFRAME/RPC\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", // wallets internal id for the user\n//   \"data\": {}, // included in body of user-signature request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizeUserSignature(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      throw new Error(\"Invalid user-signature service\")\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport * as rlp from \"@onflow/rlp\"\nimport {fetchServices} from \"./fetch-services\"\nimport {mergeServices} from \"./merge-services\"\nimport {USER_PRAGMA} from \"./normalize/__vsn\"\nimport {normalizeService} from \"./normalize/service\"\n\nfunction deriveCompositeId(authn) {\n  return rlp\n    .encode([\n      authn.provider.address || authn.provider.name || \"UNSPECIFIED\",\n      authn.id,\n    ])\n    .toString(\"hex\")\n}\n\nfunction normalizeData(data) {\n  data.addr = data.addr ? withPrefix(data.addr) : null\n  data.paddr = data.paddr ? withPrefix(data.paddr) : null\n  return data\n}\n\nfunction findService(type, services) {\n  return services.find(d => d.type === type)\n}\n\nexport async function buildUser(data) {\n  data = normalizeData(data)\n\n  var services = mergeServices(\n    data.services || [],\n    await fetchServices(data.hks, data.code)\n  ).map(service => normalizeService(service, data))\n\n  const authn = findService(\"authn\", services)\n\n  return {\n    ...USER_PRAGMA,\n    addr: withPrefix(data.addr),\n    cid: deriveCompositeId(authn),\n    loggedIn: true,\n    services: services,\n    expiresAt: data.exp,\n  }\n}\n","export function serviceOfType(services = [], type) {\n  return services.find(service => service.type === type)\n}\n","export function serviceEndpoint(service) {\n  const url = new URL(service.endpoint)\n  url.searchParams.append(\"l6n\", window.location.origin)\n  if (service.params != null) {\n    for (let [key, value] of Object.entries(service.params || {})) {\n      url.searchParams.append(key, value)\n    }\n  }\n  return url\n}\n","import {serviceEndpoint} from \"./service-endpoint\"\n\nexport function fetchService(service, opts = {}) {\n  const method = opts.method || \"POST\"\n  const body =\n    method === \"GET\"\n      ? undefined\n      : JSON.stringify(opts.data || service.data || {})\n\n  return fetch(serviceEndpoint(service), {\n    method: method,\n    headers: {\n      ...(service.headers || {}),\n      ...(opts.headers || {}),\n      \"Content-Type\": \"application/json\",\n    },\n    body: body,\n  }).then((d) => d.json())\n}\n","import {POLLING_RESPONSE_PRAGMA} from \"./__vsn\"\nimport {normalizeBackChannelRpc} from \"./back-channel-rpc\"\nimport {normalizeFrame} from \"./frame\"\n\n// {\n//    \"f_type\": \"PollingResponse\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"status\": \"PENDING\", // PENDING | APPROVED | DECLINED\n//    \"reason\": null,      // Reason for Declining Transaction\n//    \"data\": null,        // Return value for APPROVED\n//    \"updates\": BackChannelRpc,\n//    \"local\": Frame,\n// }\nexport function normalizePollingResponse(resp) {\n  if (resp == null) return null\n  if (!!resp.addr || !!resp.services) {\n    resp = {status: \"APPROVED\", data: {...resp}}\n  }\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return {\n        ...POLLING_RESPONSE_PRAGMA,\n        status: resp.status,\n        reason: resp.reason ?? null,\n        data: resp.compositeSignature || resp.data || {},\n        updates: normalizeBackChannelRpc(resp.authorizationUpdates),\n        local: normalizeFrame((resp.local || [])[0]),\n      }\n  }\n}\n","import {normalizePollingResponse} from \"../../../normalize/polling-response\"\nimport {serviceEndpoint} from \"./service-endpoint\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {fetchService} from \"./fetch-service\"\n\nconst OPTIONS = {\n  \"HTTP/GET\": \"GET\",\n  \"HTTP/POST\": \"POST\",\n}\n\nconst serviceMethod = service => {\n  invariant(\n    OPTIONS[service.method],\n    \"Invalid Service Method for type back-channel-rpc\",\n    {service}\n  )\n  return OPTIONS[service.method]\n}\n\nconst serviceBody = service => {\n  if (service.method === \"HTTP/GET\") return undefined\n  if (service.method === \"HTTP/POST\" && service.data != null)\n    return JSON.stringify(service.data)\n  return undefined\n}\n\nexport async function poll(service, canContinue = () => true) {\n  invariant(service, \"Missing Polling Service\", {service})\n  if (!canContinue()) throw new Error(\"Externally Halted\")\n\n  const resp = await fetchService(service, {\n    method: serviceMethod(service),\n  }).then(normalizePollingResponse)\n\n  switch (resp.status) {\n    case \"APPROVED\":\n      return resp.data\n    case \"DECLINED\":\n      throw new Error(`Declined: ${resp.reason || \"No reason supplied.\"}`)\n    default:\n      await new Promise(r => setTimeout(r, 500))\n      return poll(resp.updates, canContinue)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\n\nconst FRAME = \"FCL_IFRAME\"\n\nconst FRAME_STYLES = `\n  position:fixed;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n  height: 100vh;\n  width: 100vw;\n  display:block;\n  background:rgba(0,0,0,0.25);\n  z-index: 2147483647;\n  box-sizing: border-box;\n`\n\nexport function renderFrame(src) {\n  invariant(\n    !document.getElementById(FRAME),\n    \"Attempt at triggering multiple Frames\",\n    {src}\n  )\n\n  const $frame = document.createElement(\"iframe\")\n  $frame.src = src\n  $frame.id = FRAME\n  $frame.allow = \"usb *; hid *\"\n  $frame.frameBorder = \"0\"\n  $frame.style.cssText = FRAME_STYLES\n  document.body.append($frame)\n\n  const unmount = () => {\n    if (document.getElementById(FRAME)) {\n      document.getElementById(FRAME).remove()\n    }\n  }\n\n  return [$frame.contentWindow, unmount]\n}\n","const POP = \"FCL_POP\"\n\nlet popup = null\nlet previousUrl = null\n\nfunction popupWindow(url, windowName, win, w, h) {\n  const y = win.top.outerHeight / 2 + win.top.screenY - h / 2\n  const x = win.top.outerWidth / 2 + win.top.screenX - w / 2\n  return win.open(\n    url,\n    windowName,\n    `toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=${w}, height=${h}, top=${y}, left=${x}`\n  )\n}\n\nexport function renderPop(src) {\n  if (popup == null || popup?.closed) {\n    popup = popupWindow(src, POP, window, 640, 600)\n  } else if (previousUrl !== src) {\n    popup = popupWindow(src, POP, window, 640, 600)\n    popup.focus()\n  } else {\n    popup.focus()\n  }\n\n  previousUrl = src\n\n  var timer = setInterval(function () {\n    if (popup && popup.closed) {\n      clearInterval(timer)\n      popup = null\n    }\n  }, 1000)\n\n  const unmount = () => {\n    if (popup && !popup.closed) {\n      popup.close()\n      popup = null\n    }\n  }\n\n  return [popup, unmount]\n}\n","const TAB = \"FCL_TAB\"\n\nlet tab = null\nlet previousUrl = null\n\nexport function renderTab(src) {\n  if (tab == null || tab?.closed) {\n    tab = window.open(src, \"_blank\")\n  } else if (previousUrl !== src) {\n    tab = window.open(src, \"_blank\")\n    tab.focus()\n  } else {\n    tab.focus()\n  }\n\n  previousUrl = src\n\n  var timer = setInterval(function () {\n    if (tab && tab.closed) {\n      clearInterval(timer)\n      tab = null\n    }\n  }, 1000)\n\n  const unmount = () => {\n    if (tab && !tab.closed) {\n      tab.close()\n      tab = null\n    }\n  }\n\n  return [tab, unmount]\n}\n","import {renderFrame} from \"./strategies/utils/render-frame\"\nimport {renderPop} from \"./strategies/utils/render-pop\"\nimport {renderTab} from \"./strategies/utils/render-tab\"\nimport {serviceEndpoint} from \"./strategies/utils/service-endpoint\"\n\nconst VIEWS = {\n  \"VIEW/IFRAME\": renderFrame,\n  \"VIEW/POP\": renderPop,\n  \"VIEW/TAB\": renderTab,\n}\n\nexport async function execLocal(service, opts = {}) {\n  try {\n    return VIEWS[service.method](serviceEndpoint(service), opts)\n  } catch (error) {\n    console.error(\"execLocal({service, opts = {}})\", error, {service, opts})\n    throw error\n  }\n}\n","import {fetchService} from \"./utils/fetch-service\"\nimport {normalizePollingResponse} from \"../../normalize/polling-response\"\nimport {normalizeLocalView} from \"../../normalize/local-view\"\nimport {poll} from \"./utils/poll\"\nimport {execLocal} from \"../exec-local\"\n\nexport async function execHttpPost(service, signable, opts = {}) {\n  signable.data = service.data\n  const resp = await fetchService(service, {\n    data: signable,\n  }).then(normalizePollingResponse)\n\n  if (resp.status === \"APPROVED\") {\n    return resp.data\n  } else if (resp.status === \"DECLINED\") {\n    throw new Error(`Declined: ${resp.reason || \"No reason supplied.\"}`)\n  } else if (resp.status === \"PENDING\") {\n    var canContinue = true\n    const [_, unmount] = await execLocal(normalizeLocalView(resp.local))\n\n    const close = () => {\n      try {\n        unmount()\n        canContinue = false\n      } catch (error) {\n        console.error(\"Frame Close Error\", error)\n      }\n    }\n\n    return poll(resp.updates, () => canContinue)\n      .then(serviceResponse => {\n        close()\n        return serviceResponse\n      })\n      .catch(error => {\n        console.error(error)\n        close()\n        throw error\n      })\n  } else {\n    console.error(`Auto Decline: Invalid Response`, {service, resp})\n    throw new Error(`Auto Decline: Invalid Response`)\n  }\n}\n","import {renderFrame} from \"./render-frame\"\nimport {serviceEndpoint} from \"./service-endpoint\"\n\nconst CLOSE_EVENT = \"FCL:VIEW:CLOSE\"\nconst READY_EVENT = \"FCL:VIEW:READY\"\nconst RESPONSE_EVENT = \"FCL:VIEW:RESPONSE\"\n\nconst noop = () => {}\nconst _ = e => typeof e === \"string\" && e.toLowerCase()\nconst deprecate = (was, want) =>\n  console.warn(\n    \"DEPRECATION NOTICE\",\n    `Received ${was}, please use ${want} for this and future versions of FCL`\n  )\n\nconst IGNORE = new Set([\n  \"monetizationstart\",\n  \"monetizationpending\",\n  \"monetizationprogress\",\n  \"monetizationstop\",\n])\n\nexport function frame(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  var tab = null\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n\n  window.addEventListener(\"message\", internal)\n  const [$frame, unmount] = renderFrame(serviceEndpoint(service))\n  return {send, close}\n\n  function internal(e) {\n    try {\n      if (typeof e.data !== \"object\") return\n      if (IGNORE.has(e.data.type)) return\n      if (_(e.data.type) === _(CLOSE_EVENT)) close()\n      if (_(e.data.type) === _(READY_EVENT)) onReady(e, {send, close})\n      if (_(e.data.type) === _(RESPONSE_EVENT)) onResponse(e, {send, close})\n      onMessage(e, {send, close})\n\n      // Backwards Compatible\n      if (_(e.data.type) === _(\"FCL:FRAME:READY\")) {\n        deprecate(e.data.type, READY_EVENT)\n        onReady(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL:FRAME:RESPONSE\")) {\n        deprecate(e.data.type, RESPONSE_EVENT)\n        onResponse(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL:FRAME:CLOSE\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n      //\n      if (_(e.data.type) === _(\"FCL::CHALLENGE::RESPONSE\")) {\n        deprecate(e.data.type, RESPONSE_EVENT)\n        onResponse(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL::AUTHZ_READY\")) {\n        deprecate(e.data.type, READY_EVENT)\n        onReady(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL::CHALLENGE::CANCEL\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n      if (_(e.data.type) === _(\"FCL::CANCEL\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n    } catch (error) {\n      console.error(\"Frame Callback Error\", error)\n      close()\n    }\n  }\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", internal)\n      if (tab != null) tab.close()\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Frame Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $frame.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Frame Send Error\", msg, error)\n    }\n  }\n}\n","import {renderPop} from \"./render-pop\"\nimport {serviceEndpoint} from \"./service-endpoint\"\n\nconst CLOSE_EVENT = \"FCL:VIEW:CLOSE\"\nconst READY_EVENT = \"FCL:VIEW:READY\"\nconst RESPONSE_EVENT = \"FCL:VIEW:RESPONSE\"\n\nconst noop = () => {}\nconst _ = e => typeof e === \"string\" && e.toLowerCase()\nconst deprecate = (was, want) =>\n  console.warn(\n    \"DEPRECATION NOTICE\",\n    `Received ${was}, please use ${want} for this and future versions of FCL`\n  )\n\nconst IGNORE = new Set([\n  \"monetizationstart\",\n  \"monetizationpending\",\n  \"monetizationprogress\",\n  \"monetizationstop\",\n])\n\nexport function pop(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  var tab = null\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n\n  window.addEventListener(\"message\", internal)\n  const [$pop, unmount] = renderPop(serviceEndpoint(service))\n  return {send, close}\n\n  function internal(e) {\n    try {\n      if (typeof e.data !== \"object\") return\n      if (IGNORE.has(e.data.type)) return\n      if (_(e.data.type) === _(CLOSE_EVENT)) close()\n      if (_(e.data.type) === _(READY_EVENT)) onReady(e, {send, close})\n      if (_(e.data.type) === _(RESPONSE_EVENT)) onResponse(e, {send, close})\n      onMessage(e, {send, close})\n\n      // Backwards Compatible\n      if (_(e.data.type) === _(\"FCL:FRAME:READY\")) {\n        deprecate(e.data.type, READY_EVENT)\n        onReady(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL:FRAME:RESPONSE\")) {\n        deprecate(e.data.type, RESPONSE_EVENT)\n        onResponse(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL:FRAME:CLOSE\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n      //\n      if (_(e.data.type) === _(\"FCL::CHALLENGE::RESPONSE\")) {\n        deprecate(e.data.type, RESPONSE_EVENT)\n        onResponse(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL::AUTHZ_READY\")) {\n        deprecate(e.data.type, READY_EVENT)\n        onReady(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL::CHALLENGE::CANCEL\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n      if (_(e.data.type) === _(\"FCL::CANCEL\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n    } catch (error) {\n      console.error(\"Popup Callback Error\", error)\n      close()\n    }\n  }\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", internal)\n      if (tab != null) tab.close()\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Popup Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $pop.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Popup Send Error\", msg, error)\n    }\n  }\n}\n","import {renderTab} from \"./render-tab\"\nimport {serviceEndpoint} from \"./service-endpoint\"\n\nconst CLOSE_EVENT = \"FCL:VIEW:CLOSE\"\nconst READY_EVENT = \"FCL:VIEW:READY\"\nconst RESPONSE_EVENT = \"FCL:VIEW:RESPONSE\"\n\nconst noop = () => {}\nconst _ = e => typeof e === \"string\" && e.toLowerCase()\nconst deprecate = (was, want) =>\n  console.warn(\n    \"DEPRECATION NOTICE\",\n    `Received ${was}, please use ${want} for this and future versions of FCL`\n  )\n\nconst IGNORE = new Set([\n  \"monetizationstart\",\n  \"monetizationpending\",\n  \"monetizationprogress\",\n  \"monetizationstop\",\n])\n\nexport function tab(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  var tab = null\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n\n  window.addEventListener(\"message\", internal)\n  const [$tab, unmount] = renderTab(serviceEndpoint(service))\n  return {send, close}\n\n  function internal(e) {\n    try {\n      if (typeof e.data !== \"object\") return\n      if (IGNORE.has(e.data.type)) return\n      if (_(e.data.type) === _(CLOSE_EVENT)) close()\n      if (_(e.data.type) === _(READY_EVENT)) onReady(e, {send, close})\n      if (_(e.data.type) === _(RESPONSE_EVENT)) onResponse(e, {send, close})\n      onMessage(e, {send, close})\n\n      // Backwards Compatible\n      if (_(e.data.type) === _(\"FCL:FRAME:READY\")) {\n        deprecate(e.data.type, READY_EVENT)\n        onReady(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL:FRAME:RESPONSE\")) {\n        deprecate(e.data.type, RESPONSE_EVENT)\n        onResponse(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL:FRAME:CLOSE\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n      //\n      if (_(e.data.type) === _(\"FCL::CHALLENGE::RESPONSE\")) {\n        deprecate(e.data.type, RESPONSE_EVENT)\n        onResponse(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL::AUTHZ_READY\")) {\n        deprecate(e.data.type, READY_EVENT)\n        onReady(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL::CHALLENGE::CANCEL\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n      if (_(e.data.type) === _(\"FCL::CANCEL\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n    } catch (error) {\n      console.error(\"Tab Callback Error\", error)\n      close()\n    }\n  }\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", internal)\n      if (tab != null) tab.close()\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Tab Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $tab.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Tab Send Error\", msg, error)\n    }\n  }\n}\n","import {execHttpPost} from \"./strategies/http-post\"\nimport {execIframeRPC} from \"./strategies/iframe-rpc\"\nimport {execPopRPC} from \"./strategies/pop-rpc\"\nimport {execTabRPC} from \"./strategies/tab-rpc\"\n\nconst STRATEGIES = {\n  \"HTTP/RPC\": execHttpPost,\n  \"HTTP/POST\": execHttpPost,\n  \"IFRAME/RPC\": execIframeRPC,\n  \"POP/RPC\": execPopRPC,\n  \"TAB/RPC\": execTabRPC,\n}\n\nexport async function execService({service, msg = {}, opts = {}}) {\n  try {\n    return STRATEGIES[service.method](service, msg, opts)\n  } catch (error) {\n    console.error(\"execService({service, msg = {}, opts = {}})\", error, {service, msg, opts})\n    throw error\n  }\n}","import {uid} from \"@onflow/util-uid\"\nimport {frame} from \"./utils/frame\"\nimport {normalizePollingResponse} from \"../../normalize/polling-response\"\nimport {configLens} from \"../../../default-config\"\n\nexport function execIframeRPC(service, body, opts) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const includeOlderJsonRpcCall = opts.includeOlderJsonRpcCall\n\n    body.data = service.data\n\n    frame(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n            },\n            config: {\n              services: await configLens(/^service\\./),\n              app: await configLens(/^app\\.detail\\./),\n            },\n          })\n          send({\n            type: \"FCL:FRAME:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n            },\n            config: {\n              services: await configLens(/^service\\./),\n              app: await configLens(/^app\\.detail\\./),\n            },\n            deprecated: {\n              message:\n                \"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n              deprecated: {\n                message:\n                  \"jsonrpc is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n              },\n            })\n          }\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execIframeRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execIframeRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n    })\n  })\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {pop} from \"./utils/pop\"\nimport {normalizePollingResponse} from \"../../normalize/polling-response\"\nimport {configLens} from \"../../../default-config\"\n\nexport function execPopRPC(service, body, opts) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const includeOlderJsonRpcCall = opts.includeOlderJsonRpcCall\n\n    body.data = service.data\n\n    pop(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n            },\n            config: {\n              services: await configLens(/^service\\./),\n              app: await configLens(/^app\\.detail\\./),\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n            })\n          }\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n    })\n  })\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {tab} from \"./utils/tab\"\nimport {normalizePollingResponse} from \"../../normalize/polling-response\"\nimport {configLens} from \"../../../default-config\"\n\nexport function execTabRPC(service, body, opts) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const includeOlderJsonRpcCall = opts.includeOlderJsonRpcCall\n\n    body.data = service.data\n\n    tab(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n            },\n            config: {\n              services: await configLens(/^service\\./),\n              app: await configLens(/^app\\.detail\\./),\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n            })\n          }\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n    })\n  })\n}\n","import {COMPOSITE_SIGNATURE_PRAGMA} from \"./__vsn\"\nimport {sansPrefix} from \"@onflow/util-address\"\n\n// {\n//    \"f_type\": \"CompositeSignature\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"addr\": \"_____\",         // sans-prefix\n//    \"signature\": \"adfe1234\", // hex\n//    \"keyId\": 3,\n// }\nexport function normalizeCompositeSignature(resp) {\n  if (resp == null) return null\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return {\n        ...COMPOSITE_SIGNATURE_PRAGMA,\n        addr: sansPrefix(resp.addr || resp.address),\n        signature: resp.signature || resp.sig,\n        keyId: resp.keyId,\n      }\n  }\n}\n","import \"../default-config\"\nimport {account, config} from \"@onflow/sdk\"\nimport {spawn, send, INIT, SUBSCRIBE, UNSUBSCRIBE} from \"@onflow/util-actor\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {buildUser} from \"./build-user\"\nimport {serviceOfType} from \"./service-of-type\"\nimport {execService} from \"./exec-service\"\nimport {query} from \"../exec/query\"\nimport {normalizeCompositeSignature} from \"./normalize/composite-signature\"\nimport AsyncStorage from '@react-native-community/async-storage';\n\nconst NAME = \"CURRENT_USER\"\nconst UPDATED = \"CURRENT_USER/UPDATED\"\nconst SNAPSHOT = \"SNAPSHOT\"\nconst SET_CURRENT_USER = \"SET_CURRENT_USER\"\nconst DEL_CURRENT_USER = \"DEL_CURRENT_USER\"\n\nconst DATA = `{\n  \"f_type\": \"User\",\n  \"f_vsn\": \"1.0.0\",\n  \"addr\":null,\n  \"cid\":null,\n  \"loggedIn\":null,\n  \"expiresAt\":null,\n  \"services\":[]\n}`\n\nconst coldStorage = {\n  get: async () => {\n    const fallback = JSON.parse(DATA)\n    const stored = JSON.parse(AsyncStorage.getItem(NAME))\n    if (stored != null && fallback[\"f_vsn\"] !== stored[\"f_vsn\"]) {\n      AsyncStorage.removeItem(NAME)\n      return fallback\n    }\n    return stored || fallback\n  },\n  put: async data => {\n    AsyncStorage.setItem(NAME, JSON.stringify(data))\n    return data\n  },\n}\n\nconst canColdStorage = () => {\n  return config().get(\"persistSession\", true)\n}\n\nconst HANDLERS = {\n  [INIT]: async ctx => {\n    ctx.merge(JSON.parse(DATA))\n    if (await canColdStorage()) {\n      const user = await coldStorage.get()\n      if (notExpired(user)) ctx.merge(user)\n    }\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, {...ctx.all()})\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n  [SNAPSHOT]: async (ctx, letter) => {\n    letter.reply({...ctx.all()})\n  },\n  [SET_CURRENT_USER]: async (ctx, letter, data) => {\n    ctx.merge(data)\n    if (await canColdStorage()) coldStorage.put(ctx.all())\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [DEL_CURRENT_USER]: async (ctx, letter) => {\n    ctx.merge(JSON.parse(DATA))\n    if (await canColdStorage()) coldStorage.put(ctx.all())\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n}\n\nconst identity = v => v\nconst spawnCurrentUser = () => spawn(HANDLERS, NAME)\n\nfunction notExpired(user) {\n  return (\n    user.expiresAt == null ||\n    user.expiresAt === 0 ||\n    user.expiresAt > Date.now()\n  )\n}\n\nasync function authenticate() {\n  return new Promise(async (resolve, reject) => {\n    spawnCurrentUser()\n    const user = await snapshot()\n    if (user.loggedIn && notExpired(user)) return resolve(user)\n\n    const discoveryWallet = await config.first([\n      \"discovery.wallet\",\n      \"challenge.handshake\",\n    ])\n\n    const method = await config.first([\"discovery.wallet.method\"], \"IFRAME/RPC\")\n\n    try {\n      const response = await execService({\n        service: {\n          endpoint: discoveryWallet,\n          method: method,\n        },\n      })\n      send(NAME, SET_CURRENT_USER, await buildUser(response))\n    } catch (e) {\n      console.error(\"Error while authenticating\", e)\n    } finally {\n      resolve(await snapshot())\n    }\n  })\n}\n\nfunction unauthenticate() {\n  spawnCurrentUser()\n  send(NAME, DEL_CURRENT_USER)\n}\n\nconst normalizePreAuthzResponse = authz => ({\n  f_type: \"PreAuthzResponse\",\n  f_vsn: \"1.0.0\",\n  proposer: (authz || {}).proposer,\n  payer: (authz || {}).payer || [],\n  authorization: (authz || {}).authorization || [],\n})\n\nfunction resolvePreAuthz(authz) {\n  const resp = normalizePreAuthzResponse(authz)\n  const axs = []\n\n  if (resp.proposer != null) axs.push([\"PROPOSER\", resp.proposer])\n  for (let az of resp.payer || []) axs.push([\"PAYER\", az])\n  for (let az of resp.authorization || []) axs.push([\"AUTHORIZER\", az])\n\n  var result = axs.map(([role, az]) => ({\n    tempId: [az.identity.address, az.identity.keyId].join(\"|\"),\n    addr: az.identity.address,\n    keyId: az.identity.keyId,\n    signingFunction(signable) {\n      return execService({service: az, msg: signable})\n    },\n    role: {\n      proposer: role === \"PROPOSER\",\n      payer: role === \"PAYER\",\n      authorizer: role === \"AUTHORIZER\",\n    },\n  }))\n  return result\n}\n\nasync function authorization(account) {\n  spawnCurrentUser()\n  const user = await authenticate()\n  const authz = serviceOfType(user.services, \"authz\")\n\n  const preAuthz = serviceOfType(user.services, \"pre-authz\")\n  if (preAuthz) {\n    return {\n      ...account,\n      tempId: \"CURRENT_USER\",\n      async resolve(account, preSignable) {\n        return resolvePreAuthz(\n          await execService({service: preAuthz, msg: preSignable})\n        )\n      },\n    }\n  }\n\n  return {\n    ...account,\n    tempId: \"CURRENT_USER\",\n    resolve: null,\n    addr: sansPrefix(authz.identity.address),\n    keyId: authz.identity.keyId,\n    sequenceNum: null,\n    signature: null,\n    async signingFunction(signable) {\n      return normalizeCompositeSignature(\n        await execService({\n          service: authz,\n          msg: signable,\n          opts: {\n            includeOlderJsonRpcCall: true,\n          },\n        })\n      )\n    },\n  }\n}\n\nfunction subscribe(callback) {\n  spawnCurrentUser()\n  const EXIT = \"@EXIT\"\n  const self = spawn(async ctx => {\n    ctx.send(NAME, SUBSCRIBE)\n    while (1) {\n      const letter = await ctx.receive()\n      if (letter.tag === EXIT) {\n        ctx.send(NAME, UNSUBSCRIBE)\n        return\n      }\n      callback(letter.data)\n    }\n  })\n  return () => send(self, EXIT)\n}\n\nfunction snapshot() {\n  spawnCurrentUser()\n  return send(NAME, SNAPSHOT, null, {expectReply: true, timeout: 0})\n}\n\nasync function info() {\n  spawnCurrentUser()\n  const {addr} = await snapshot()\n  if (addr == null) throw new Error(\"No Flow Address for Current User\")\n  return account(addr)\n}\n\nconst makeSignable = msg => {\n  invariant(/^[0-9a-f]+$/i.test(msg), \"Message must be a hex string\")\n\n  return {\n    message: msg,\n  }\n}\n\nasync function signUserMessage(msg) {\n  spawnCurrentUser()\n  const user = await authenticate()\n  const signingService = serviceOfType(user.services, \"user-signature\")\n\n  invariant(\n    signingService,\n    \"Current user must have authorized a signing service.\"\n  )\n\n  try {\n    const response = await execService({\n      service: signingService,\n      msg: makeSignable(msg),\n    })\n    if (Array.isArray(response)) {\n      return response.map(compSigs => normalizeCompositeSignature(compSigs))\n    } else {\n      return [normalizeCompositeSignature(response)]\n    }\n  } catch (error) {\n    return error\n  }\n}\n\nconst VERIFY_SIG_SCRIPT = `\nimport Crypto\n    \npub fun main(\n  message: String,\n  rawPublicKeys: [String],\n  weights: [UFix64],\n  signAlgos: [UInt],\n  signatures: [String],\n): Bool {\n\n  let keyList = Crypto.KeyList()\n  \n  var i = 0\n  for rawPublicKey in rawPublicKeys {\n    keyList.add(\n      PublicKey(\n        publicKey: rawPublicKey.decodeHex(),\n        signatureAlgorithm: signAlgos[i] == 2 ? SignatureAlgorithm.ECDSA_P256 : SignatureAlgorithm.ECDSA_secp256k1 \n      ),\n      hashAlgorithm: HashAlgorithm.SHA3_256,\n      weight: weights[i],\n    )\n    i = i + 1\n  }\n\n  let signatureSet: [Crypto.KeyListSignature] = []\n\n  var j = 0\n  for signature in signatures {\n    signatureSet.append(\n      Crypto.KeyListSignature(\n        keyIndex: j,\n        signature: signature.decodeHex()\n      )\n    )\n    j = j + 1\n  }\n    \n  let signedData = message.decodeHex()\n  \n  return keyList.verify(\n    signatureSet: signatureSet,\n    signedData: signedData\n  )\n}\n`\n\nasync function verifyUserSignatures(msg, compSigs) {\n  invariant(/^[0-9a-f]+$/i.test(msg), \"Message must be a hex string\")\n  invariant(\n    Array.isArray(compSigs),\n    \"Must include an Array of composite signatures\"\n  )\n\n  let weights = []\n  let signAlgos = []\n  let signatures = []\n  const rawPubKeys = await Promise.all(\n    compSigs.map(async cs => {\n      invariant(typeof cs.addr === \"string\", \"addr must be a string\")\n      invariant(typeof cs.keyId === \"number\", \"keyId must be a number\")\n      invariant(typeof cs.signature === \"string\", \"signature must be a string\")\n\n      try {\n        const account = await account(cs.addr)\n        weights.push(account.keys[cs.keyId].weight.toFixed(1))\n        signAlgos.push(account.keys[cs.keyId].signAlgo)\n        signatures.push(cs.signature)\n        return account.keys[cs.keyId].publicKey\n      } catch (err) {\n        throw err\n      }\n    })\n  )\n\n  return await query({\n    cadence: `${VERIFY_SIG_SCRIPT}`,\n    args: (arg, t) => [\n      arg(msg, t.String),\n      arg(rawPubKeys, t.Array([t.String])),\n      arg(weights, t.Array(t.UFix64)),\n      arg(signAlgos, t.Array([t.UInt])),\n      arg(signatures, t.Array([t.String])),\n    ],\n  })\n}\n\nexport const currentUser = () => {\n  return {\n    authenticate,\n    unauthenticate,\n    authorization,\n    signUserMessage,\n    verifyUserSignatures,\n    subscribe,\n    snapshot,\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\n\nexport function mergeServices(sx1 = [], sx2 = []) {\n  // TODO: Make this smarter\n  return [...sx1, ...sx2]\n}\n","export async function fetchServices(servicesURL, code) {\n  if (servicesURL == null || code == null) return []\n\n  const url = new URL(servicesURL)\n  url.searchParams.append(\"code\", code)\n\n  const resp = await fetch(url, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then(d => d.json())\n\n  if (Array.isArray(resp)) return resp\n\n  // Backwards compatibility for First-Gen Wallet Providers\n  const services = []\n\n  // Convert authorizations into authz services\n  if (Array.isArray(resp.authorizations)) {\n    for (let service of resp.authorizations) {\n      services.push({\n        type: \"authz\",\n        keyId: resp.keyId,\n        ...service,\n      })\n    }\n  }\n\n  // Convert Provider info into an authn service\n  if (resp.provider != null) {\n    services.push({\n      type: \"authn\",\n      id: \"wallet-provider#authn\",\n      ...resp.provider,\n    })\n  }\n\n  return services\n}\n","import \"../default-config\"\nimport {\n  spawn,\n  send,\n  subscriber,\n  snapshoter,\n  UPDATED,\n  SNAPSHOT,\n  INIT,\n  SUBSCRIBE,\n  UNSUBSCRIBE,\n} from \"@onflow/util-actor\"\nimport {send as fclSend, decode, getTransactionStatus} from \"@onflow/sdk\"\n\nconst RATE = 2500\nconst POLL = \"POLL\"\n\nconst fetchTxStatus = async transactionId => {\n  return fclSend([getTransactionStatus(transactionId)]).then(decode)\n}\n\nconst isExpired = tx => tx.status === 5\nconst isSealed = tx => tx.status >= 4\nconst isExecuted = tx => tx.status >= 3\nconst isFinalized = tx => tx.status >= 2\nconst isPending = tx => tx.status >= 1\nconst isUnknown = tx => tx.status >= 0\n\nconst isDiff = (cur, next) => {\n  return JSON.stringify(cur) !== JSON.stringify(next)\n}\n\nconst HANDLERS = {\n  [INIT]: async ctx => {\n    const tx = await fetchTxStatus(ctx.self())\n    if (!isSealed(tx)) setTimeout(() => ctx.sendSelf(POLL), RATE)\n    ctx.merge(tx)\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, ctx.all())\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n  [SNAPSHOT]: async (ctx, letter) => {\n    letter.reply(ctx.all())\n  },\n  [POLL]: async ctx => {\n    const tx = await fetchTxStatus(ctx.self())\n    if (!isSealed(tx)) setTimeout(() => ctx.sendSelf(POLL), RATE)\n    if (isDiff(ctx.all(), tx)) ctx.broadcast(UPDATED, tx)\n    ctx.merge(tx)\n  },\n}\n\nconst scoped = transactionId => {\n  if (typeof transactionId === \"object\")\n    transactionId = transactionId.transactionId\n  if (transactionId == null) throw new Error(\"transactionId required\")\n  return transactionId\n}\n\nconst spawnTransaction = transactionId => {\n  return spawn(HANDLERS, scoped(transactionId))\n}\n\nexport function transaction(transactionId) {\n  function snapshot() {\n    return snapshoter(transactionId, spawnTransaction)\n  }\n\n  function subscribe(callback) {\n    return subscriber(scoped(transactionId), spawnTransaction, callback)\n  }\n\n  function once(predicate) {\n    return function innerOnce(opts = {}) {\n      const suppress = opts.suppress || false\n      return new Promise((resolve, reject) => {\n        const unsub = subscribe(txStatus => {\n          if (txStatus.statusCode && !suppress) {\n            reject(txStatus.errorMessage)\n            unsub()\n          } else if (predicate(txStatus)) {\n            resolve(txStatus)\n            unsub()\n          }\n        })\n      })\n    }\n  }\n\n  return {\n    snapshot,\n    subscribe,\n    onceFinalized: once(isFinalized),\n    onceExecuted: once(isExecuted),\n    onceSealed: once(isSealed),\n  }\n}\n\ntransaction.isUnknown = isUnknown\ntransaction.isPending = isPending\ntransaction.isFinalized = isFinalized\ntransaction.isExecuted = isExecuted\ntransaction.isSealed = isSealed\ntransaction.isExpired = isExpired\n","import {invariant} from \"@onflow/util-invariant\"\nimport * as sdk from \"@onflow/sdk\"\nimport {isRequired, isObject, isString, isFunc, isNumber} from \"./utils/is\"\nimport {normalizeArgs} from \"./utils/normalize-args\"\nimport {currentUser} from \"../current-user\"\nimport {transaction} from \"../transaction\"\n\n/** As the current user Mutate the Flow Blockchain\n *\n *  @arg {Object} opts - Mutation Options and configuration\n *  @arg {string} opts.cadence - Cadence Transaction used to mutate Flow\n *  @arg {ArgsFn} opts.args - Arguments passed to cadence transaction\n *  @arg {number} opts.limit - Compute Limit for transaction\n *  @returns {string} Transaction Id\n *\n *  Where:\n *    @callback ArgsFn\n *    @arg {ArgFn}  arg - Argument function to define a single argument\n *    @arg {Object} t   - Cadence Types object used to define the type\n *    @returns {args[]}\n *\n *    @callback ArgFn\n *    @arg {Any}  value - the value of the argument\n *    @arg {Type} type  - the cadence type of the value\n *    @returns {arg}\n *\n *  Example:\n *    fcl.mutate({\n *      cadence: `\n *        transaction(a: Int, b: Int, c: Address) {\n *          prepare(acct: AuthAccount) {\n *            log(acct)\n *            log(a)\n *            log(b)\n *            log(c)\n *          }\n *        }\n *      `,\n *      args: (arg, t) => [\n *        arg(6, t.Int),\n *        arg(7, t.Int),\n *        arg(\"0xba1132bc08f82fe2\", t.Address),\n *      ],\n *    })\n *\n *\n *  Options:\n *    type Options = {\n *      cadence: String!,\n *      args: (arg, t) => Array<Arg>,\n *      limit: Number,\n *      authz: AuthzFn, // will overload the trinity of signatory roles\n *      proposer: AuthzFn, // will overload the proposer signatory role\n *      payer: AuthzFn, // will overload the payer signatory role\n *      authorizations: [AuthzFn], // an array of authorization functions used as authorizations signatory roles\n *    }\n */\n\nconst noop = () => {}\n\nexport async function mutate(opts = {}) {\n  var txid\n  try {\n    await prepMutation(opts)\n\n    // Allow for a config to overwrite the authorization function.\n    // prettier-ignore\n    const authz = await sdk.config().get(\"fcl.authz\", currentUser().authorization)\n\n    // prettier-ignore\n    txid = sdk.send([\n      sdk.transaction(opts.cadence),\n\n      sdk.args(normalizeArgs(opts.args || [])),\n\n      opts.limit && isNumber(opts.limit) && sdk.limit(opts.limit),\n\n      // opts.proposer > opts.authz > authz\n      sdk.proposer(opts.proposer || opts.authz || authz),\n\n      // opts.payer > opts.authz > authz\n      sdk.payer(opts.payer || opts.authz || authz),\n\n      // opts.authorizations > [opts.authz > authz]\n      sdk.authorizations(opts.authorizations || [opts.authz || authz]),\n    ]).then(sdk.decode)\n\n    return txid\n  } catch (error) {\n    throw error\n  }\n}\n\nasync function prepMutation(opts) {\n  // prettier-ignore\n  invariant(isRequired(opts), \"mutate(opts) -- opts is required\")\n  // prettier-ignore\n  invariant(isObject(opts), \"mutate(opts) -- opts must be an object\")\n  // prettier-ignore\n  invariant(isRequired(opts.cadence), \"mutate({ cadence }) -- cadence is required\")\n  // prettier-ignore\n  invariant(isString(opts.cadence), \"mutate({ cadence }) -- cadence must be a string\")\n}\n","import {interaction, pipe} from \"@onflow/sdk\"\nimport {resolve as defaultResolve} from \"@onflow/sdk\"\nimport {config, createSignableVoucher} from \"@onflow/sdk\"\n\nexport const serialize = async (args = [], opts = {}) => {\n  const resolveFunction = await config.first(\n    [\"sdk.resolve\"],\n    opts.resolve || defaultResolve\n  )\n\n  if (Array.isArray(args)) args = await pipe(interaction(), args)\n\n  return JSON.stringify(\n    createSignableVoucher(await resolveFunction(args)),\n    null,\n    2\n  )\n}\n","import {spawn, subscriber, SUBSCRIBE, UNSUBSCRIBE} from \"@onflow/util-actor\"\nimport {config, latestBlock} from \"@onflow/sdk\"\nexport {getEvents} from \"@onflow/sdk\"\nimport {send} from \"@onflow/sdk\"\nimport {decode} from \"@onflow/sdk\"\n\nconst RATE = 10000\nconst UPDATED = \"UPDATED\"\nconst TICK = \"TICK\"\n\nconst scheduleTick = async ctx => {\n  return setTimeout(\n    () => ctx.sendSelf(TICK),\n    await config().get(\"fcl.eventPollRate\", RATE)\n  )\n}\n\nconst HANDLERS = {\n  [TICK]: async ctx => {\n    if (!ctx.hasSubs()) return\n    let hwm = ctx.get(\"hwm\")\n    if (hwm == null) {\n      ctx.put(\"hwm\", await latestBlock())\n      ctx.put(\"tick\", await scheduleTick(ctx))\n    } else {\n      let next = await latestBlock()\n      ctx.put(\"hwm\", next)\n      const data = await send([\n        getEvents(ctx.self(), hwm.height, next.height - 1),\n      ]).then(decode)\n      for (let d of data) ctx.broadcast(UPDATED, d.data)\n      ctx.put(\"tick\", await scheduleTick(ctx))\n    }\n  },\n  [SUBSCRIBE]: async (ctx, letter) => {\n    if (!ctx.hasSubs()) {\n      ctx.put(\"tick\", await scheduleTick(ctx))\n    }\n    ctx.subscribe(letter.from)\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n    if (!ctx.hasSubs()) {\n      clearTimeout(ctx.get(\"tick\"))\n      ctx.delete(\"tick\")\n      ctx.delete(\"hwm\")\n    }\n  },\n}\n\nconst spawnEvents = key => spawn(HANDLERS, key)\n\nexport function events(key) {\n  return {\n    subscribe: callback => subscriber(key, spawnEvents, callback),\n  }\n}\n","export const sendMsgToFCL = (type, msg = {}) => {\n  if (window.location !== window.parent.location) {\n    window.parent.postMessage({...msg, type}, \"*\")\n  } else {\n    window.opener.postMessage({...msg, type}, \"*\")\n  }\n}\n","export const onMessageFromFCL = (msg, cb = () => {}) => {\n  const buildData = data => {\n    if (data.deprecated)\n      console.warn(\"DEPRECATION NOTICE\", data.deprecated.message)\n    delete data?.body?.interaction\n\n    return data\n  }\n\n  const internal = e => {\n    const {data} = e\n    if (typeof data !== \"object\") return\n    if (typeof data == null) return\n    if (data.type === msg) return\n\n    cb(buildData(data))\n  }\n\n  window.addEventListener(\"message\", internal)\n  return () => window.removeEventListener(\"message\", internal)\n}\n","import \"./default-config\"\nexport {VERSION} from \"./VERSION\"\nexport {query} from \"./exec/query\"\nexport {mutate} from \"./exec/mutate\"\nexport {serialize} from \"./serialize\"\nexport {transaction as tx} from \"./transaction\"\nexport {events} from \"./events\"\n\nimport {currentUser} from \"./current-user\"\nexport {currentUser}\n\nexport const authenticate = () => currentUser().authenticate()\nexport const unauthenticate = () => currentUser().unauthenticate()\nexport const reauthenticate = () => {\n  currentUser().unauthenticate()\n  return currentUser().authenticate()\n}\nexport const signUp = () => currentUser().authenticate()\nexport const logIn = () => currentUser().authenticate()\n\nexport const authz = currentUser().authorization\n\nimport * as types from \"@onflow/types\"\nexport const t = types\n\nimport * as WalletUtils from \"./wallet-utils\"\nexport {WalletUtils}\n\nexport {TestUtils} from \"@onflow/sdk\"\nexport {config} from \"@onflow/sdk\"\nexport {send} from \"@onflow/sdk\"\nexport {decode} from \"@onflow/sdk\"\nexport {account} from \"@onflow/sdk\"\nexport {latestBlock} from \"@onflow/sdk\"\nexport {isOk, isBad, why, pipe, build} from \"@onflow/sdk\"\nexport {withPrefix, sansPrefix, display} from \"@onflow/util-address\"\nexport {template as cadence} from \"@onflow/util-template\"\nexport {template as cdc} from \"@onflow/util-template\"\nexport {createSignableVoucher} from \"@onflow/sdk\"\n\n// builders\nexport {transaction} from \"@onflow/sdk\"\nexport {script} from \"@onflow/sdk\"\nexport {ping} from \"@onflow/sdk\"\nexport {atBlockHeight} from \"@onflow/sdk\"\nexport {atBlockId} from \"@onflow/sdk\"\nexport {getAccount} from \"@onflow/sdk\"\nexport {getEvents} from \"@onflow/sdk\"\nexport {getEventsAtBlockHeightRange} from \"@onflow/sdk\"\nexport {getEventsAtBlockIds} from \"@onflow/sdk\"\nexport {getLatestBlock} from \"@onflow/sdk\"\nexport {getBlock} from \"@onflow/sdk\"\nexport {getBlockHeader} from \"@onflow/sdk\"\nexport {getBlockById} from \"@onflow/sdk\"\nexport {getBlockByHeight} from \"@onflow/sdk\"\nexport {getCollection} from \"@onflow/sdk\"\nexport {getTransactionStatus} from \"@onflow/sdk\"\nexport {getTransaction} from \"@onflow/sdk\"\nexport {authorizations, authorization} from \"@onflow/sdk\"\nexport {args, arg} from \"@onflow/sdk\"\nexport {proposer} from \"@onflow/sdk\"\nexport {payer} from \"@onflow/sdk\"\nexport {limit} from \"@onflow/sdk\"\nexport {ref} from \"@onflow/sdk\"\nexport {params, param} from \"@onflow/sdk\"\nexport {validator} from \"@onflow/sdk\"\nexport {invariant} from \"@onflow/sdk\"\n"],"names":["configLens","regex","Object","fromEntries","entries","config","where","map","key","value","replace","put","VERSION","is","type","d","isRequired","isObject","isString","isFunc","isNumber","normalizeArgs","ax","sdk","arg","t","query","opts","async","invariant","cadence","preQuery","send","script","args","limit","then","decode","SERVICE_PRAGMA","f_type","f_vsn","IDENTITY_PRAGMA","USER_PRAGMA","POLLING_RESPONSE_PRAGMA","COMPOSITE_SIGNATURE_PRAGMA","normalizeFrame","service","old","endpoint","params","data","normalizeBackChannelRpc","method","normalizeLocalView","resp","serviceNormalizers","back-channel-rpc","pre-authz","uid","id","identity","address","withPrefix","addr","keyId","authz","authn","pid","provider","name","icon","frame","open-id","user-signature","Error","local-view","deriveCompositeId","rlp","encode","toString","serviceOfType","services","find","serviceEndpoint","url","URL","searchParams","append","window","location","origin","fetchService","body","undefined","JSON","stringify","fetch","headers","Content-Type","json","normalizePollingResponse","status","reason","compositeSignature","updates","authorizationUpdates","local","OPTIONS","HTTP/GET","HTTP/POST","serviceMethod","poll","canContinue","Promise","r","setTimeout","FRAME","renderFrame","src","document","getElementById","$frame","createElement","allow","frameBorder","style","cssText","contentWindow","remove","popup","previousUrl","popupWindow","windowName","win","w","h","open","top","outerHeight","screenY","outerWidth","screenX","renderPop","_popup","closed","focus","timer","setInterval","clearInterval","close","tab","renderTab","_tab","VIEWS","VIEW/IFRAME","VIEW/POP","VIEW/TAB","execHttpPost","signable","_","unmount","error","console","execLocal","serviceResponse","catch","noop","e","toLowerCase","deprecate","was","want","warn","IGNORE","Set","STRATEGIES","HTTP/RPC","IFRAME/RPC","resolve","reject","includeOlderJsonRpcCall","onClose","onMessage","onReady","onResponse","addEventListener","internal","has","removeEventListener","msg","postMessage","parse","[object Object]","app","deprecated","message","jsonrpc","result","POP/RPC","$pop","pop","TAB/RPC","$tab","execService","normalizeCompositeSignature","sansPrefix","signature","sig","NAME","UPDATED","DATA","coldStorage","AsyncStorage","setItem","canColdStorage","get","HANDLERS","INIT","ctx","merge","user","fallback","stored","getItem","removeItem","notExpired","SUBSCRIBE","letter","subscribe","from","all","UNSUBSCRIBE","unsubscribe","SNAPSHOT","reply","SET_CURRENT_USER","broadcast","DEL_CURRENT_USER","spawnCurrentUser","spawn","expiresAt","Date","now","authenticate","snapshot","loggedIn","discoveryWallet","first","response","sx1","sx2","mergeServices","paddr","normalizeData","servicesURL","code","Array","isArray","authorizations","push","fetchServices","hks","normalizeService","findService","cid","exp","buildUser","unauthenticate","authorization","account","preAuthz","tempId","preSignable","proposer","payer","normalizePreAuthzResponse","axs","az","role","join","signingFunction","authorizer","resolvePreAuthz","sequenceNum","callback","EXIT","self","receive","tag","expectReply","timeout","makeSignable","test","signUserMessage","signingService","compSigs","verifyUserSignatures","weights","signAlgos","signatures","rawPubKeys","cs","keys","weight","toFixed","signAlgo","publicKey","err","String","UFix64","UInt","currentUser","fetchTxStatus","fclSend","getTransactionStatus","transactionId","isSealed","tx","isExecuted","isFinalized","sendSelf","POLL","cur","next","scoped","spawnTransaction","transaction","subscriber","once","predicate","suppress","unsub","txStatus","statusCode","errorMessage","snapshoter","onceFinalized","onceExecuted","onceSealed","mutate","prepMutation","isUnknown","isPending","isExpired","serialize","resolveFunction","defaultResolve","pipe","interaction","createSignableVoucher","scheduleTick","TICK","hasSubs","hwm","latestBlock","getEvents","height","clearTimeout","delete","spawnEvents","events","parent","opener","cb","buildData","reauthenticate","signUp","logIn","types"],"mappings":"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"}